[{"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/index.js":"1","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/contextProvider.js":"2","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/App.js":"3","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/constantFile.js":"4","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/themes/theme.js":"5","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/User/user.js":"6","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Menu/menu.js":"7","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Company/company.js":"8","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Home/home.js":"9","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Form/form.js":"10","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/TFGInfo/TFGInfo.js":"11","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/userFunctions.js":"12","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Home/CompanyItem.js":"13","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Graphics/BarCharLayaout.js":"14","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Company/CompanyTable.js":"15","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Company/HeaderCompany.js":"16","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Form/Formu.js":"17","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Graphics/GraphicsLayout.js":"18","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/TFGInfo/Header.js":"19","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/TFGInfo/Container.js":"20","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Graphics/ComposedChart.js":"21","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Company/historyItem.js":"22","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Graphics/CircularGraph.js":"23","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/TFGInfo/DonationCard.js":"24","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/TFGInfo/MainCard.js":"25","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/TFGInfo/MemberCard.js":"26"},{"size":237,"mtime":1647946580070,"results":"27","hashOfConfig":"28"},{"size":534,"mtime":1647946580068,"results":"29","hashOfConfig":"28"},{"size":1057,"mtime":1647946579949,"results":"30","hashOfConfig":"28"},{"size":379,"mtime":1647946580066,"results":"31","hashOfConfig":"28"},{"size":515,"mtime":1647946580073,"results":"32","hashOfConfig":"28"},{"size":7962,"mtime":1647946580029,"results":"33","hashOfConfig":"28"},{"size":1527,"mtime":1647946580015,"results":"34","hashOfConfig":"28"},{"size":5567,"mtime":1648767674752,"results":"35","hashOfConfig":"28"},{"size":5429,"mtime":1647946580007,"results":"36","hashOfConfig":"28"},{"size":20912,"mtime":1647946579983,"results":"37","hashOfConfig":"28"},{"size":5604,"mtime":1648639760524,"results":"38","hashOfConfig":"28"},{"size":385,"mtime":1647946580075,"results":"39","hashOfConfig":"28"},{"size":858,"mtime":1647946580003,"results":"40","hashOfConfig":"28"},{"size":2189,"mtime":1647946579986,"results":"41","hashOfConfig":"28"},{"size":6005,"mtime":1648766030783,"results":"42","hashOfConfig":"28"},{"size":369,"mtime":1648637956000,"results":"43","hashOfConfig":"28"},{"size":2489,"mtime":1647946579973,"results":"44","hashOfConfig":"28"},{"size":2105,"mtime":1647946579993,"results":"45","hashOfConfig":"28"},{"size":1531,"mtime":1648656412006,"results":"46","hashOfConfig":"28"},{"size":3179,"mtime":1648639948349,"results":"47","hashOfConfig":"28"},{"size":1084,"mtime":1647946579990,"results":"48","hashOfConfig":"28"},{"size":753,"mtime":1648640428000,"results":"49","hashOfConfig":"28"},{"size":1726,"mtime":1647946579988,"results":"50","hashOfConfig":"28"},{"size":4170,"mtime":1648656037521,"results":"51","hashOfConfig":"28"},{"size":2476,"mtime":1648651707816,"results":"52","hashOfConfig":"28"},{"size":2861,"mtime":1648650191497,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"70ne47",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"56"},"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/index.js",[],["119","120"],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/contextProvider.js",[],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/App.js",[],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/constantFile.js",[],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/themes/theme.js",[],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/User/user.js",["121"],"import React, { useEffect, useState } from 'react';\nimport linkedin_logo from '../../Images/linkedin_logo.png';\nimport styles from './user.module.css';\nimport {context} from '../../contextProvider.js';\nimport Web3 from 'web3';\nimport * as constants from './../../constantFile.js';\nimport complaintContract from './../../complaintContract.json';\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst User = () => {\n    //Variable y setter para mostrar u ocultar el formulario\n    const [showForm, setShowForm] = useState(false);\n\n    //Variable que va a contener las empresas que apareceran como opcion en el formulario\n    const [companies, setCompanies] = useState([]);\n\n    //Datos del formulario\n    const [input, setInput] = useState('');\n    const [company, setCompany] = useState('');\n\n    //Cantidad a donar (en caso de que donen)\n    const [donationQuantity, setDonationQuantity] = useState(0);\n\n    //Se obtiene el usuario (se comprueba si hay un usuario logeado o no)\n    const user = React.useContext(context);\n    \n    //Delegamos al servidor la autenticacion\n    const verifyLinkedIn = () => { window.location.href = `${constants.SERVER_URL}/auth/linkedin`};\n\n    //Delegamos al servidor el cierre de sesion\n    const logOut = () => { window.location.href = `${constants.SERVER_URL}/logout`};\n   \n    //Desplegar el formulario\n    const showFormF = () => { setShowForm(!showForm); };\n\n    //Se guarda la empresa escogida\n    const handleCompany = (e) => { setCompany(e.target.value); }\n\n    //Se guardan los datos escritos en el formulario de denuncia\n    const handleInput = (e) => { \n         setInput(e.target.value); \n    };\n\n    //Se guarda el valor escrito en el formulario de donación\n    const handleDonation = (e) => {\n        setDonationQuantity(e.target.value);\n    }\n\n    //Función para realizar la transaccion al recibir los parametros\n    async function newComplaint(web3, address, transaction) {\n            try {\n                const tx = {\n                    to      : transaction._parent._address, //Dirección del contrato\n                    data    : transaction.encodeABI(),      //\n                    gas     : await transaction.estimateGas({from: address}),   //Se estima el coste en gas\n                    gasPrice: await web3.eth.getGasPrice(),   //Precio del gas\n                    gaslimit: 0x1000000,   //Limite de gas que se puede gastar\n                    value   : 0,   //No se va a realizar una transferencia\n                };\n                //Se firma la transacción con la clave privada\n                const signedTx  = await web3.eth.accounts.signTransaction(tx, constants.PRIVATE_KEY);\n                //Se envia la transaccion firmada \n                web3.eth.sendSignedTransaction(signedTx.rawTransaction);\n            }\n            catch (err) {\n                console.log(err.message);\n            }\n    }\n\n    //Para comprobar si tienen proveedor (Metamask) de forma que puedan donar\n    const hasProvider = !! Web3.givenProvider;\n\n    //Obtenemos las empresas del smart contract, conectandonos al nodo de Infura\n    useEffect(() => {\n        const infuraUrl = constants.INFURA_URL;\n        //Crea una instancia para comunicarse con el nodo indicado\n        const web3 = new Web3(new Web3.providers.HttpProvider(infuraUrl));\n        //Se conectaria con el contrato\n        const contract = new web3.eth.Contract(complaintContract.abi, constants.CONTRACT_ADDRESS);\n        //Obtenemos el array de empresas\n        contract.methods.getCompanies().call().then(response => setCompanies(response));\n    },[]);\n\n    //Función que trata el submit en el formulario de denuncias\n    const handleSubmit = async(e) => { \n        e.preventDefault();\n        //Si todavia no se ha conectado con Metamask entonces aparece un popup para la conexion\n        const infuraUrl = constants.INFURA_URL;\n        //Crea una instancia para comunicarse con el nodo indicado\n        const web3 = new Web3(new Web3.providers.HttpProvider(infuraUrl));\n        //Nos conectamos con el contrato\n        const contract = new web3.eth.Contract(complaintContract.abi, constants.CONTRACT_ADDRESS);\n        //Realizamos la denuncia\n        newComplaint(web3, constants.ADDRESS, contract.methods.newComplaint(company,user,input));\n        setInput('');\n    };\n\n    //Función que trata el submit en el caso de donaciones\n    const handleSubmitDonation = async(e) => {\n        e.preventDefault();\n        //Si todavia no se ha conectado con Metamask entonces aparece un popup para la conexion\n        const web3 = new Web3(window.web3.currentProvider);\n        const accounts = await window.ethereum.enable();\n        \n        //No hace falta que firmemos la transacción ya que Metamask lo hace por nosotros\n        web3.eth.sendTransaction(\n            {\n                to: constants.ADDRESS,\n                from: accounts[0],\n                value: web3.utils.toWei(donationQuantity, 'ether'), //Se transfiere la cantidad introducida en el formulario\n            },(err) => {\n                if (err) console.log(err.message);\n            })\n    \n        setDonationQuantity(0);\n    }\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          backgroundColor: theme.palette.primary.main\n        }\n    }));\n\n    const theme = useStyles();\n      \n    if(!user){\n        return <div className={styles.container} >\n            <div className={styles.loginGeneral}>\n                <div className={styles.loginBox}>\n                    <h1>Login</h1>\n                    <div className={styles.loginButton} onClick={verifyLinkedIn}>\n                        <img src={linkedin_logo} alt=\"Linkedin Logo\"/>\n                        <p>Verify your identity with LinkedIn</p>\n                    </div>\n                    <div className={styles.reminderText}>\n                        <p>Please note that that logging in is necessary for <strong>identification</strong> purposes:</p>\n                        <ul className={styles.infoList}>\n                          <li>Your personal information will <strong>not</strong> be published or stored.</li>\n                          <li>Sensitive data will <strong>not</strong> be accessed.</li>\n                          <li>Your report will be <strong>anonymous</strong>.</li>\n                          <li>A randomized name will be assigned to you in order to show the report.</li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    }\n    else{\n        return <div className={styles.userPanel}>\n            <h1>User Panel</h1>\n            {showForm && (\n                <form onSubmit={handleSubmit} className={styles.reportForm}>\n                  <label>Report Form</label>\n                  <label>In which company did the incident take place?</label>\n                  <select onChange={handleCompany}>\n                     {companies.map(item => <option value={item} key={item}>{item}</option>)}\n                  </select>\n                  <label>Please, explain briefly what happened.</label>\n                  <input type=\"textarea\" name=\"explanation\" value={input} onChange={handleInput} />\n                  <button>Submit</button>\n                </form>\n            )}\n            \n            <div className={styles.buttonPanel}>\n                <button onClick={showFormF} className={styles.panelButton}>Show/Hide Report</button>\n                <button onClick={logOut} className={styles.panelButton}>Log Out</button>\n            </div>\n\n            {hasProvider && (<div>\n              <h3>Please, feel free to suport this platform by donating.</h3>\n              <form onSubmit={handleSubmitDonation} className={styles.reportForm}>\n                <input type=\"textarea\" name=\"donationInput\" value={donationQuantity} onChange={handleDonation} />\n                <button>Donate</button> \n             </form>\n            </div>)}\n\n        </div>\n    }\n    \n}\n\nexport default User\n","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Menu/menu.js",[],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Company/company.js",["122","123","124","125","126","127","128","129"],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Home/home.js",["130","131","132","133","134"],"import { createContext, useEffect, useState} from 'react';\nimport Web3 from 'web3';\nimport {CardGroup } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport * as constants from '../../constantFile.js';\nimport complaintContract from '../../complaintContract.json';\nimport CompanyItem from './CompanyItem.js';\nimport { makeStyles } from '@material-ui/core/styles'\nimport  Carousel  from  'semantic-ui-carousel-react';\nimport header from  '../../Images/header.jpg';\nimport {Grid} from '@material-ui/core';\nimport BarChartLayaout from '../Graphics/BarCharLayaout.js';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      backgroundColor: theme.palette.primary.main\n    }\n  }));\n\n\nconst Home = () => {\n\n    const [companies, setCompanies] = useState([]);\n    const [reputation, setReputation] = useState([]);\n    const theme = useStyles();\n    //const[company, onFilterChanged]=useState([]);\n   \n    useEffect(() => {\n    //Para conectarse al smart contract\n        const infuraUrl = constants.INFURA_URL;\n\n        //Crea una instancia para comunicarse con el nodo indicado\n        const web3 = new Web3(new Web3.providers.HttpProvider(infuraUrl));\n\n        //Se conectaria con el contrato\n        const contract = new web3.eth.Contract(complaintContract.abi, constants.CONTRACT_ADDRESS);\n\n        //Obtenemos el array de empresas\n        contract.methods.getCompanies().call().then(response => setCompanies(response));\n        \n        //Obtenemos sus reputaciones\n        contract.methods.getReputation().call().then(response => setReputation(response));\n    \n    },[]);\n    \n    //Unimos reputaciones y empresas\n    const cards = companies.map((e, i) => [e, reputation[i]]);\n\n    var resto = companies.length%3;\n    let n_elems=0;\n    if( resto==0){\n        n_elems=companies.length/3;\n    }\n    else{\n        n_elems=companies.length/3+1;\n    }\n\n    let  elements  = [\n\t\t{ \n\n            render:()=>{\n                return (\n                    <div className=\"ui three column grid\">\n                        <div className=\"row\">\n                            <CardGroup itemsPerRow={3}>\n                            <div className=\"column\"></div>\n                            <CompanyItem key={1} name={companies[0]} reputation={reputation[0]}/>\n                            <div className=\"column\"></div>\n                            <CompanyItem key={2} name={companies[1]} reputation={reputation[1]}/>\n                            <div className=\"column\"></div>\n                            <CompanyItem key={3} name={companies[2]} reputation={reputation[2]}/>\n                            </CardGroup>\n                        </div>\n                    </div>\n                )\n            }   \n\t\t},\n        {\n            render:()=>{\n                return (\n                    <div className=\"ui three column grid\">\n                        <div className=\"row\">\n                            <CardGroup itemsPerRow={3}>\n                            <div className=\"column\"></div>\n                            <CompanyItem key={1} name={companies[4]} reputation={reputation[4]}/>\n                            <div className=\"column\"></div>\n                            <CompanyItem key={2} name={companies[5]} reputation={reputation[5]}/>\n                            <div className=\"column\"></div>\n                            <CompanyItem key={3} name={companies[6]} reputation={reputation[6]}/>\n                            </CardGroup>\n                        </div>\n                    </div>\n                )\n            }\n        },\n        {\n            render:()=>{\n                return (\n                    <div className=\"ui three column grid\">\n                        <div className=\"row\">\n                            <CardGroup itemsPerRow={3}>\n                                <div className=\"column\"></div>\n                                <CompanyItem key={1} name={companies[7]} reputation={reputation[7]}/>\n                                <div className=\"column\"></div>\n                                <CompanyItem key={2} name={companies[8]} reputation={reputation[8]}/>\n                                <div className=\"column\"></div>\n                                <CompanyItem key={3} name={companies[9]} reputation={reputation[9]}/>\n                            </CardGroup>\n                        </div>\n                    </div>\n                )\n            }\n        }\n    ]\n  \n    \n    return <div className={theme.root}>\n        <header >\n            <img className=\"ui fluid image\" src={header}/>\n        </header>\n\n        <h1>TÍTULO/LEMA</h1>\n\n        <Button className=\"Ver todo\"/>\n        <Grid container spacing={1} padding ={50} direction =\"column\">\n            <Carousel\n                    elements = {elements}\n                    duration ={3000}\n                    animation = 'slide left'\n                    showNextPrev = {false}\n                    showIndicators = {true}   \n            />\n        </Grid>\n       \n        <h2>Gráficas generales</h2>\n\n        <Grid container spacing={2} padding = {40} className = 'Box' >\n            <Grid item xs={6}> \n                <BarChartLayaout titulo=\"Top 5 mejor valoradas\"/> \n            </Grid>\n            <Grid item xs={6}> \n                <BarChartLayaout titulo=\"Denuncias por género\"/> \n            </Grid>\n        </Grid>\n    </div>\n}\n\nexport default Home;\n","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Form/form.js",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152"],"import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Slider from \"@material-ui/core/Slider\";\nimport {Input, Button } from 'semantic-ui-react';\n\nimport GraphicsLayout from \"../Graphics/GraphicsLayout\";\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport reduxForm from  \"./Formu\"\nimport {\n  ResponsiveContainer\n} from 'recharts'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary.main\n  },\n\n}));\n\nconst defaultValues = {\n  name: \"\",\n  age: 0,\n  gender: \"\",\n  os: \"\",\n  favoriteNumber: 0,\n};\nconst Form = () => {\n  const classes = useStyles();\n\n  return(\n     \n    <form className=\"ui form\">\n      <h1 className=\"ui dividing header\">Formulario de Denuncia</h1>\n      <div className=\"field\">\n        \n        <div className=\"two fields\">\n          {/*Nombre empresa*/}\n          <div className=\"required field\">\n            <label>Nombre de la empresa</label>\n            <select className=\"ui fluid dropdown\">\n              <option value=\"\">Empresa</option>\n              <option value=\"Aa\">Telefónica</option>\n              <option value=\"Ba\">HP</option>\n              <option value=\"Ca\">Deloitte</option>\n              <option value=\"Da\">KPMG</option>\n              <option value=\"Ea\">EY</option>\n              <option value=\"Fa\">Movistar</option>\n              <option value=\"Ga\">MS</option>\n              <option value=\"Ha\">Santander</option>\n              <option value=\"Ia\">BBVA</option>\n              <option value=\"Ja\">Westcon</option>\n            </select>\n          </div>\n          {/*Relación con empresa*/}\n          <div className=\"field\">\n            <label>Relación actual con la empresa</label>\n            <select className=\"ui fluid dropdown\">\n              <option value=\"\">Relación</option>\n              <option value=\"Aaa\">Sigo trabajando</option>\n              <option value=\"Aab\">Me despidieron</option>\n              <option value=\"Bab\">He dimitido</option>\n              <option value=\"Jab\">Otro</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n\n      <div className=\"three fields\">\n\n        {/*Denunciado antes*/}\n        <div className=\"inline fields\">\n          <label for=\"fruit\">¿Has denunciado anteriormente?</label>\n          <div className=\"field\">\n            <div className=\"ui radio checkbox\">\n              <input type=\"radio\" name=\"fruit\" checked=\"\" tabindex=\"0\" className=\"hidden\"/>\n              <label>Sí</label>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <div className=\"ui radio checkbox\">\n              <input type=\"radio\" name=\"fruit\" tabindex=\"0\" className=\"hidden\"/>\n              <label>No</label>\n            </div>\n          </div>\n          \n        </div>\n        {/*Mediante que medio denunciaste*/}\n        <div className=\"field\">\n          <label>Medio</label>\n          <input type=\"text\" name=\"card[number]\" maxlength=\"16\" placeholder=\"En caso afirmativo, ¿mediante qué medio?\"/>\n        </div>\n        {/*Fecha del suceso*/}\n        <div className=\"field\">\n        <label>Fecha aproximada del suceso o del inicio de este</label>\n        <div className=\"two fields\">\n          <div className=\"field\">\n            <select className=\"ui fluid search dropdown\" name=\"card[expire-month]\">\n              <option value=\"\">Mes</option>\n              <option value=\"1\">Enero</option>\n              <option value=\"2\">Febrero</option>\n              <option value=\"3\">Marzo</option>\n              <option value=\"4\">Abril</option>\n              <option value=\"5\">Mayo</option>\n              <option value=\"6\">Junio</option>\n              <option value=\"7\">Julio</option>\n              <option value=\"8\">Agosto</option>\n              <option value=\"9\">Septiembre</option>\n              <option value=\"10\">Octubre</option>\n              <option value=\"11\">Noveembre</option>\n              <option value=\"12\">Diciembre</option>\n            </select>\n          </div>\n          <div className=\"field\">\n            <input type=\"text\" name=\"card[expire-year]\" maxlength=\"4\" placeholder=\"Año\"/>\n          </div>\n        </div>\n        </div>\n      </div>\n        \n        \n\n    <div className=\"field\">      \n      {/*Tipo de denuncia*/}\n      <div className=\"required field\">\n        <label>Tipo de denuncia</label>\n        <select className=\"ui fluid dropdown\">\n          <option value=\"\">Tipo</option>\n          <option value=\"A\">Etnia</option>\n          <option value=\"B\">Género</option>\n          <option value=\"C\">Maltrato</option>\n          <option value=\"D\">Edad</option>\n          <option value=\"E\">Religión</option>\n          <option value=\"F\">Condición sexual</option>\n          <option value=\"G\">Discapacidad</option>\n          <option value=\"H\">Mobbing</option>\n          <option value=\"I\">Explotación</option>\n          <option value=\"J\">Otro</option>\n        </select>\n      </div>\n    </div>\n\n    {/*El usuario deberá solo responder obligatoriamente a aquella relacionada con su tipo de denuncia. El resto son opcionales*/}\n    <div className=\"four fields\">\n        {/*País*/}\n        <div className=\"field\">\n        <label>Si tu denuncia es de etnia</label>\n          <select multiple=\"\" className=\"ui dropdown\">\n          <option value=\"\">Selecciona tu país de origen</option>\n          <option value=\"AF\">Afghanistan</option>\n          <option value=\"AX\">Åland Islands</option>\n          <option value=\"AL\">Albania</option>\n          <option value=\"DZ\">Algeria</option>\n          <option value=\"AS\">American Samoa</option>\n          <option value=\"AD\">Andorra</option>\n          <option value=\"AO\">Angola</option>\n          <option value=\"AI\">Anguilla</option>\n          <option value=\"AQ\">Antarctica</option>\n          <option value=\"AG\">Antigua and Barbuda</option>\n          <option value=\"AR\">Argentina</option>\n          <option value=\"AM\">Armenia</option>\n          <option value=\"AW\">Aruba</option>\n          <option value=\"AU\">Australia</option>\n          <option value=\"AT\">Austria</option>\n          <option value=\"AZ\">Azerbaijan</option>\n          <option value=\"BS\">Bahamas</option>\n          <option value=\"BH\">Bahrain</option>\n          <option value=\"BD\">Bangladesh</option>\n          <option value=\"BB\">Barbados</option>\n          <option value=\"BY\">Belarus</option>\n          <option value=\"BE\">Belgium</option>\n          <option value=\"BZ\">Belize</option>\n          <option value=\"BJ\">Benin</option>\n          <option value=\"BM\">Bermuda</option>\n          <option value=\"BT\">Bhutan</option>\n          <option value=\"BO\">Bolivia, Plurinational State of</option>\n          <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\n          <option value=\"BA\">Bosnia and Herzegovina</option>\n          <option value=\"BW\">Botswana</option>\n          <option value=\"BV\">Bouvet Island</option>\n          <option value=\"BR\">Brazil</option>\n          <option value=\"IO\">British Indian Ocean Territory</option>\n          <option value=\"BN\">Brunei Darussalam</option>\n          <option value=\"BG\">Bulgaria</option>\n          <option value=\"BF\">Burkina Faso</option>\n          <option value=\"BI\">Burundi</option>\n          <option value=\"KH\">Cambodia</option>\n          <option value=\"CM\">Cameroon</option>\n          <option value=\"CA\">Canada</option>\n          <option value=\"CV\">Cape Verde</option>\n          <option value=\"KY\">Cayman Islands</option>\n          <option value=\"CF\">Central African Republic</option>\n          <option value=\"TD\">Chad</option>\n          <option value=\"CL\">Chile</option>\n          <option value=\"CN\">China</option>\n          <option value=\"CX\">Christmas Island</option>\n          <option value=\"CC\">Cocos (Keeling) Islands</option>\n          <option value=\"CO\">Colombia</option>\n          <option value=\"KM\">Comoros</option>\n          <option value=\"CG\">Congo</option>\n          <option value=\"CD\">Congo, the Democratic Republic of the</option>\n          <option value=\"CK\">Cook Islands</option>\n          <option value=\"CR\">Costa Rica</option>\n          <option value=\"CI\">Côte d'Ivoire</option>\n          <option value=\"HR\">Croatia</option>\n          <option value=\"CU\">Cuba</option>\n          <option value=\"CW\">Curaçao</option>\n          <option value=\"CY\">Cyprus</option>\n          <option value=\"CZ\">Czech Republic</option>\n          <option value=\"DK\">Denmark</option>\n          <option value=\"DJ\">Djibouti</option>\n          <option value=\"DM\">Dominica</option>\n          <option value=\"DO\">Dominican Republic</option>\n          <option value=\"EC\">Ecuador</option>\n          <option value=\"EG\">Egypt</option>\n          <option value=\"SV\">El Salvador</option>\n          <option value=\"GQ\">Equatorial Guinea</option>\n          <option value=\"ER\">Eritrea</option>\n          <option value=\"EE\">Estonia</option>\n          <option value=\"ET\">Ethiopia</option>\n          <option value=\"FK\">Falkland Islands (Malvinas)</option>\n          <option value=\"FO\">Faroe Islands</option>\n          <option value=\"FJ\">Fiji</option>\n          <option value=\"FI\">Finland</option>\n          <option value=\"FR\">France</option>\n          <option value=\"GF\">French Guiana</option>\n          <option value=\"PF\">French Polynesia</option>\n          <option value=\"TF\">French Southern Territories</option>\n          <option value=\"GA\">Gabon</option>\n          <option value=\"GM\">Gambia</option>\n          <option value=\"GE\">Georgia</option>\n          <option value=\"DE\">Germany</option>\n          <option value=\"GH\">Ghana</option>\n          <option value=\"GI\">Gibraltar</option>\n          <option value=\"GR\">Greece</option>\n          <option value=\"GL\">Greenland</option>\n          <option value=\"GD\">Grenada</option>\n          <option value=\"GP\">Guadeloupe</option>\n          <option value=\"GU\">Guam</option>\n          <option value=\"GT\">Guatemala</option>\n          <option value=\"GG\">Guernsey</option>\n          <option value=\"GN\">Guinea</option>\n          <option value=\"GW\">Guinea-Bissau</option>\n          <option value=\"GY\">Guyana</option>\n          <option value=\"HT\">Haiti</option>\n          <option value=\"HM\">Heard Island and McDonald Islands</option>\n          <option value=\"VA\">Holy See (Vatican City State)</option>\n          <option value=\"HN\">Honduras</option>\n          <option value=\"HK\">Hong Kong</option>\n          <option value=\"HU\">Hungary</option>\n          <option value=\"IS\">Iceland</option>\n          <option value=\"IN\">India</option>\n          <option value=\"ID\">Indonesia</option>\n          <option value=\"IR\">Iran, Islamic Republic of</option>\n          <option value=\"IQ\">Iraq</option>\n          <option value=\"IE\">Ireland</option>\n          <option value=\"IM\">Isle of Man</option>\n          <option value=\"IL\">Israel</option>\n          <option value=\"IT\">Italy</option>\n          <option value=\"JM\">Jamaica</option>\n          <option value=\"JP\">Japan</option>\n          <option value=\"JE\">Jersey</option>\n          <option value=\"JO\">Jordan</option>\n          <option value=\"KZ\">Kazakhstan</option>\n          <option value=\"KE\">Kenya</option>\n          <option value=\"KI\">Kiribati</option>\n          <option value=\"KP\">Korea, Democratic People's Republic of</option>\n          <option value=\"KR\">Korea, Republic of</option>\n          <option value=\"KW\">Kuwait</option>\n          <option value=\"KG\">Kyrgyzstan</option>\n          <option value=\"LA\">Lao People's Democratic Republic</option>\n          <option value=\"LV\">Latvia</option>\n          <option value=\"LB\">Lebanon</option>\n          <option value=\"LS\">Lesotho</option>\n          <option value=\"LR\">Liberia</option>\n          <option value=\"LY\">Libya</option>\n          <option value=\"LI\">Liechtenstein</option>\n          <option value=\"LT\">Lithuania</option>\n          <option value=\"LU\">Luxembourg</option>\n          <option value=\"MO\">Macao</option>\n          <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option>\n          <option value=\"MG\">Madagascar</option>\n          <option value=\"MW\">Malawi</option>\n          <option value=\"MY\">Malaysia</option>\n          <option value=\"MV\">Maldives</option>\n          <option value=\"ML\">Mali</option>\n          <option value=\"MT\">Malta</option>\n          <option value=\"MH\">Marshall Islands</option>\n          <option value=\"MQ\">Martinique</option>\n          <option value=\"MR\">Mauritania</option>\n          <option value=\"MU\">Mauritius</option>\n          <option value=\"YT\">Mayotte</option>\n          <option value=\"MX\">Mexico</option>\n          <option value=\"FM\">Micronesia, Federated States of</option>\n          <option value=\"MD\">Moldova, Republic of</option>\n          <option value=\"MC\">Monaco</option>\n          <option value=\"MN\">Mongolia</option>\n          <option value=\"ME\">Montenegro</option>\n          <option value=\"MS\">Montserrat</option>\n          <option value=\"MA\">Morocco</option>\n          <option value=\"MZ\">Mozambique</option>\n          <option value=\"MM\">Myanmar</option>\n          <option value=\"NA\">Namibia</option>\n          <option value=\"NR\">Nauru</option>\n          <option value=\"NP\">Nepal</option>\n          <option value=\"NL\">Netherlands</option>\n          <option value=\"NC\">New Caledonia</option>\n          <option value=\"NZ\">New Zealand</option>\n          <option value=\"NI\">Nicaragua</option>\n          <option value=\"NE\">Niger</option>\n          <option value=\"NG\">Nigeria</option>\n          <option value=\"NU\">Niue</option>\n          <option value=\"NF\">Norfolk Island</option>\n          <option value=\"MP\">Northern Mariana Islands</option>\n          <option value=\"NO\">Norway</option>\n          <option value=\"OM\">Oman</option>\n          <option value=\"PK\">Pakistan</option>\n          <option value=\"PW\">Palau</option>\n          <option value=\"PS\">Palestinian Territory, Occupied</option>\n          <option value=\"PA\">Panama</option>\n          <option value=\"PG\">Papua New Guinea</option>\n          <option value=\"PY\">Paraguay</option>\n          <option value=\"PE\">Peru</option>\n          <option value=\"PH\">Philippines</option>\n          <option value=\"PN\">Pitcairn</option>\n          <option value=\"PL\">Poland</option>\n          <option value=\"PT\">Portugal</option>\n          <option value=\"PR\">Puerto Rico</option>\n          <option value=\"QA\">Qatar</option>\n          <option value=\"RE\">Réunion</option>\n          <option value=\"RO\">Romania</option>\n          <option value=\"RU\">Russian Federation</option>\n          <option value=\"RW\">Rwanda</option>\n          <option value=\"BL\">Saint Barthélemy</option>\n          <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option>\n          <option value=\"KN\">Saint Kitts and Nevis</option>\n          <option value=\"LC\">Saint Lucia</option>\n          <option value=\"MF\">Saint Martin (French part)</option>\n          <option value=\"PM\">Saint Pierre and Miquelon</option>\n          <option value=\"VC\">Saint Vincent and the Grenadines</option>\n          <option value=\"WS\">Samoa</option>\n          <option value=\"SM\">San Marino</option>\n          <option value=\"ST\">Sao Tome and Principe</option>\n          <option value=\"SA\">Saudi Arabia</option>\n          <option value=\"SN\">Senegal</option>\n          <option value=\"RS\">Serbia</option>\n          <option value=\"SC\">Seychelles</option>\n          <option value=\"SL\">Sierra Leone</option>\n          <option value=\"SG\">Singapore</option>\n          <option value=\"SX\">Sint Maarten (Dutch part)</option>\n          <option value=\"SK\">Slovakia</option>\n          <option value=\"SI\">Slovenia</option>\n          <option value=\"SB\">Solomon Islands</option>\n          <option value=\"SO\">Somalia</option>\n          <option value=\"ZA\">South Africa</option>\n          <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\n          <option value=\"SS\">South Sudan</option>\n          <option value=\"ES\">Spain</option>\n          <option value=\"LK\">Sri Lanka</option>\n          <option value=\"SD\">Sudan</option>\n          <option value=\"SR\">Suriname</option>\n          <option value=\"SJ\">Svalbard and Jan Mayen</option>\n          <option value=\"SZ\">Swaziland</option>\n          <option value=\"SE\">Sweden</option>\n          <option value=\"CH\">Switzerland</option>\n          <option value=\"SY\">Syrian Arab Republic</option>\n          <option value=\"TW\">Taiwan, Province of China</option>\n          <option value=\"TJ\">Tajikistan</option>\n          <option value=\"TZ\">Tanzania, United Republic of</option>\n          <option value=\"TH\">Thailand</option>\n          <option value=\"TL\">Timor-Leste</option>\n          <option value=\"TG\">Togo</option>\n          <option value=\"TK\">Tokelau</option>\n          <option value=\"TO\">Tonga</option>\n          <option value=\"TT\">Trinidad and Tobago</option>\n          <option value=\"TN\">Tunisia</option>\n          <option value=\"TR\">Turkey</option>\n          <option value=\"TM\">Turkmenistan</option>\n          <option value=\"TC\">Turks and Caicos Islands</option>\n          <option value=\"TV\">Tuvalu</option>\n          <option value=\"UG\">Uganda</option>\n          <option value=\"UA\">Ukraine</option>\n          <option value=\"AE\">United Arab Emirates</option>\n          <option value=\"GB\">United Kingdom</option>\n          <option value=\"US\">United States</option>\n          <option value=\"UM\">United States Minor Outlying Islands</option>\n          <option value=\"UY\">Uruguay</option>\n          <option value=\"UZ\">Uzbekistan</option>\n          <option value=\"VU\">Vanuatu</option>\n          <option value=\"VE\">Venezuela, Bolivarian Republic of</option>\n          <option value=\"VN\">Viet Nam</option>\n          <option value=\"VG\">Virgin Islands, British</option>\n          <option value=\"VI\">Virgin Islands, U.S.</option>\n          <option value=\"WF\">Wallis and Futuna</option>\n          <option value=\"EH\">Western Sahara</option>\n          <option value=\"YE\">Yemen</option>\n          <option value=\"ZM\">Zambia</option>\n          <option value=\"ZW\">Zimbabwe</option>\n        </select>\n        </div>\n        {/*Edad*/}\n        <div className=\"field\">\n          <label>Si tu denuncia es de edad</label>\n          <input type=\"text\" name=\"card[number]\" maxlength=\"16\" placeholder=\"Edad\"/>\n        </div>\n        {/*Religión*/}\n        <div className=\"field\">\n          <label>Si tu denuncia es de religión</label>\n          <input type=\"text\" name=\"card[cvc]\" maxlength=\"3\" placeholder=\"Etnia\"/>\n        </div>\n        {/*Género*/}\n        <div className=\"field\">\n          <label>Si tu denuncia es de género</label>\n          <input type=\"text\" name=\"card[cvc]\" maxlength=\"3\" placeholder=\"Género\"/>\n        </div>\n      </div>\n      <div className=\"five fields\">\n        {/*Maltrato*/}\n        <div className=\"field\">\n          <label>Si tu denuncia es de maltrato</label>\n          <input type=\"text\" name=\"card[cvc]\" maxlength=\"3\" placeholder=\"Género\"/>\n        </div>\n        {/*Condición sexual*/}\n        <div className=\"field\">\n          <label>Si tu denuncia es de condición sexual</label>\n          <input type=\"text\" name=\"card[cvc]\" maxlength=\"3\" placeholder=\"Género\"/>\n        </div>\n        {/*Discapacidad*/}\n        <div className=\"field\">\n          <label>Si tu denuncia es de discapacidad</label>\n          <input type=\"text\" name=\"card[cvc]\" maxlength=\"3\" placeholder=\"Género\"/>\n        </div>\n        {/*Mobbing*/}\n        <div className=\"field\">\n          <label>Si tu denuncia es de mobbing</label>\n          <input type=\"text\" name=\"card[cvc]\" maxlength=\"3\" placeholder=\"Género\"/>\n        </div>\n        {/*Explotación*/}\n         <div className=\"field\">\n          <label>Si tu denuncia es de explotación</label>\n          <input type=\"text\" name=\"card[cvc]\" maxlength=\"3\" placeholder=\"Género\"/>\n        </div>\n      </div>\n\n  \n\n\n\n    {/*El usuario contará su historia*/} \n    <div className=\"required field\">\n    <label >Descripción del suceso</label>\n        <input type=\"text\" name=\"card[number]\" maxlength=\"16\" placeholder=\"Cuéntanos tu hisoria\"/>\n    </div>\n\n\n      \n      {/*Botón para permitir compartir la historia. No es obligatorio para el usuario*/}\n      <div className=\"ui segment\">\n        <div className=\"field\">\n          <div className=\"ui toggle checkbox\">\n          <div className=\"ui checkbox\">\n            <input type=\"checkbox\" tabindex=\"0\" className=\"hidden\"/>\n            <label>Acepto que mi historia aparezca publicada de forma anónima</label>\n          </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"ui button\" tabindex=\"0\">Enviar formulario</div>\n    </form>\n  );\n};\nexport default Form;\n\n\n","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/TFGInfo/TFGInfo.js",["153","154","155"],"import React, {Component} from \"react\";\nimport {Card, Grid} from 'semantic-ui-react';\nimport Container from './Container';\nimport Header from './Header';\nimport DonationCard from './DonationCard';\nimport MemberCard from './MemberCard';\n\nimport { makeStyles } from '@material-ui/core/styles'\n\n    \nfunction  getInitialProps () {\n    const info = [\n        {\n            header: 'Alex',\n            meta: 'Miembro 1',\n            description: 'Empresa de telefonía'\n        },\n        {\n            header: 'Ana',\n            meta: 'Miembro  2',\n            description: 'Empresa inversora en I+D'\n        },\n        {\n            header: 'Javi',\n            meta: 'Miembro 3',\n            description: 'Añadir info'\n        },\n        {\n            header: 'Ángeles',\n            meta: 'Miembro 4',\n            description: 'Empresa de telefonía'\n        },\n        {\n            header: 'Jorge',\n            meta: 'Miembro 5',\n            description: 'Empresa inversora en I+D'\n        },\n        {\n            header: 'David',\n            meta: 'Miembro 6',\n            description: 'Empresa especializada en consultoría'\n        }\n    \n    ];\n    return {info};\n    //es lo mismo que poner return{campaings:campaigns}\n}\n\n\nfunction renderInfo(){\n    const info = [\n        {\n            header: 'Alex',\n            meta: 'Estudiante',\n            description: 'Añadir info'\n        },\n        {\n            header: 'Ana',\n            meta: 'Estudiante',\n            description: 'Añadir info'\n        },\n        {\n            header: 'Javi',\n            meta: 'Estudiante',\n            description: 'Añadir info'\n        },\n        {\n            header: 'Ángeles',\n            meta: 'Estudiante',\n            description: 'Añadir info'\n        },\n        {\n            header: 'Jorge',\n            meta: 'Estudiante',\n            description: 'Añadir info'\n        },\n        {\n            header: 'David',\n            meta: 'Estudiante',\n            description: 'Añadir info'\n        }\n    \n    ];\n    return <Card.Group items = {info} />;\n}\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      backgroundColor: theme.palette.primary.main\n    },\n    \n  }));\n\n  \nfunction Info (){\n\n        const theme = useStyles();\n        return (\n\n            \n            <div className={theme.root}>\n                <Grid>\n                    \n                        \n                <Grid.Row >\n                    <Grid.Column width = {16}>\n                        <Header/>\n                    </Grid.Column>\n                </Grid.Row>\n\n                <Grid.Row >\n                    <Grid.Column width = {8}>\n                        <Grid.Row>\n                            <Grid.Column width = {1} >\n                                \n                            </Grid.Column>\n                            <Grid.Column width = {6} >\n                                <DonationCard/>\n                            </Grid.Column>\n                            <Grid.Column width = {1} >\n                                    \n                            </Grid.Column>\n                                \n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width = {2} >\n                                \n                                </Grid.Column>\n                            <Grid.Column width = {6} >\n                                <Container/>\n                            </Grid.Column>\n                            <Grid.Column width = {2} >\n                                \n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid.Column>\n\n                        \n                    <Grid.Column width = {4} >\n                        \n                        <Grid.Row>\n                            <Grid.Column width = {4} >\n                                <MemberCard/>\n                            </Grid.Column> \n                            \n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width = {4} >\n                                <MemberCard/>\n                            </Grid.Column> \n                            \n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width = {4} >\n                                <MemberCard/>\n                            </Grid.Column> \n                             \n                        </Grid.Row>\n                    </Grid.Column> \n\n\n                    <Grid.Column width = {4} >\n                        \n                        <Grid.Row>\n                            <Grid.Column width = {4} >\n                                <MemberCard/>\n                            </Grid.Column> \n                            \n                        </Grid.Row>\n                        <Grid.Row></Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width = {4} >\n                                <MemberCard/>\n                            </Grid.Column> \n                            \n                        </Grid.Row>\n                        <Grid.Row ></Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column width = {4} >\n                                <MemberCard/>\n                            </Grid.Column> \n                             \n                        </Grid.Row>\n                    </Grid.Column>\n\n                    \n                </Grid.Row>\n                </Grid>\n            </div>\n\n        )\n\n\n    \n}\n\nexport default Info;","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/userFunctions.js",[],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Home/CompanyItem.js",[],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Graphics/BarCharLayaout.js",["156","157","158"],"\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport './graphics.css';\nimport BarChart from './ComposedChart';\n\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  CardHeader, \n} from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles'\nconst COLORES = [ '#7fb3d5' , '#2980b9' , '#1f618d' , '#154360' ];\nconst ColoresGraficas=['#5566F3'];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary.main\n  }\n}));\n\n  export default function BarChartLayaout({titulo}){\n    const theme = useStyles();\n  \n  \n    const data1 = [\n      {\n        name: 'Telefónica',\n        value: 123,\n        color: COLORES[0]\n      },\n      {\n        name: 'Deloitte',\n        value: 25,\n        color: COLORES[1]\n      },\n      {\n        name: 'KPMG',\n        value: 25,\n        color: COLORES[2]\n      },\n      {\n        name: 'MS',\n        value: 17,\n        color: COLORES[3]\n      }\n    ];\n  \n    return (\n      <Card>\n        <CardHeader title={titulo} />\n        <CardContent>\n          <Box className = 'Box'\n            sx={{\n              height: 300,\n              position: 'relative'\n            }}\n          >\n            <BarChart colorBarra={ColoresGraficas[0]} colorLinea={COLORES[1]} />\n          </Box>\n          <Box \n            sx={{\n              display: 'flex',\n              justifyContent: 'center',\n              pt: 2\n            }}\n          >\n            {data1.map(({\n              color,\n              name,\n              value\n            }) => (\n              <Box \n                key={name}\n                sx={{\n                  p: 1,\n                  textAlign: 'center'\n                }}\n              >\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  {name}\n                </Typography>\n                <Typography\n                  style={{ color }}\n                  variant=\"h4\"\n                >\n                  {value}\n                  %\n                </Typography>\n              </Box>\n            ))}\n          </Box>\n        </CardContent>\n      </Card>\n    );\n  }","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Company/CompanyTable.js",["159","160","161","162","163","164","165","166","167","168","169","170","171"],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Company/HeaderCompany.js",["172"],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Form/Formu.js",[],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Graphics/GraphicsLayout.js",["173","174","175"],"\n\n\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport './graphics.css';\nimport CircularGraph from \"./CircularGraph\";\n\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  CardHeader, \n} from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles'\nconst COLORES = [ '#7fb3d5' , '#2980b9' , '#1f618d' , '#154360' ];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary.main\n  }\n}));\n\n  export default function GraphicsLayout(){\n    const theme = useStyles();\n  \n  \n    const data1 = [\n      {\n        name: 'Mujeres',\n        value: 33,\n        color: COLORES[0]\n      },\n      {\n        name: 'Hombres',\n        value: 25,\n        color: COLORES[1]\n      },\n      {\n        name: 'No binario',\n        value: 25,\n        color: COLORES[2]\n      },\n      {\n        name: 'Otros',\n        value: 17,\n        color: COLORES[3]\n      }\n    ];\n  \n    return (\n      <Card>\n        <CardHeader title=\"Gráfica\" />\n        <CardContent>\n          <Box className = 'Box'\n            sx={{\n              height: 300,\n              position: 'relative'\n            }}\n          >\n            <CircularGraph/>\n          </Box>\n          <Box \n            sx={{\n              display: 'flex',\n              justifyContent: 'center',\n              pt: 2\n            }}\n          >\n            {data1.map(({\n              color,\n              name,\n              value\n            }) => (\n              <Box \n                key={name}\n                sx={{\n                  p: 1,\n                  textAlign: 'center'\n                }}\n              >\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  {name}\n                </Typography>\n                <Typography\n                  style={{ color }}\n                  variant=\"h4\"\n                >\n                  {value}\n                  %\n                </Typography>\n              </Box>\n            ))}\n          </Box>\n        </CardContent>\n      </Card>\n    );\n  }","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/TFGInfo/Header.js",["176","177","178","179","180","181","182"],"import { Header, Icon, Image } from 'semantic-ui-react'\nimport image from '../../Images/fdi_logo.png'\nimport React from 'react'\nimport { Container, Grid } from 'semantic-ui-react'\nimport {  Typography } from '@mui/material';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Box, Paper} from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(4),\n        //margin: '2rem',\n        backgroundColor:'#bbdefb ',\n    },\n  }));\n\nconst HeaderExampleUsersIcon = () => {\n  const classes = useStyles();\n\n  return (\n\n  <div>\n    <div class=\"ui grid intro\">\n        <div class=\"row\">\n            <div class=\"column center aligned\">\n                <div padding = {20} className={classes.paper}>\n                  <p></p>\n                  <Typography\n                              sx={{\n                                  fontSize: '2rem',\n                                  fontWeight: 500,\n                                  color: '#276fe6'\n                              }}\n                              align='center'\n                          >\n                      <h1 >Plataforma Blockchain para visualizar la Reputación de empresas sobre casos de Discriminación</h1>\n                      <p></p>\n                   </Typography>\n                </div>\n\n            </div>\n        </div>\n    </div>\n    <p></p>\n    <Image\n      margin='2rem'\n      centered\n      size='small'\n      src={image}\n    />\n  </div>\n)\n  }\n\nexport default HeaderExampleUsersIcon","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/TFGInfo/Container.js",["183","184"],"/* eslint-disable max-len */\n\nimport React from 'react'\nimport { Container, Header, Grid } from 'semantic-ui-react'\nimport {  Typography } from '@mui/material';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Button, Box, Paper} from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(6),\n        margin: '2rem',\n        width: 2000,\n        backgroundColor:'#fff  ',\n    },\n  }));\n\n\nconst ContainerExampleText = () => {\n    const classes = useStyles();\n    return (\n        <Container >\n            <Grid>\n                <Paper  className = {classes.paper} >\n                    <Grid.Row>\n                        <Header as='h2' color= 'blue'>Descripción del Proyecto</Header>\n                    </Grid.Row>\n                    <Grid.Row >\n                        \n                        <Typography\n                            sx={{\n                                fontSize: '1.5rem',\n                                fontWeight: 500,\n                                color: '#3949ab'\n                            }}\n                            align='left'\n                            margin = {6}\n                        >\n                            <p></p>\n                            \n                            <p color= '#3949ab'>\n                                Hoy en día, por desgracia aún está muy presente la discriminación en las empresas por sexismo, racismo, homofobia, transfobia, u otras muchas discriminaciones. Esta situación lleva a casos de mobbing o acoso contra empleados/as. \n                            \n                            </p>\n                            <p color= '#3949ab'>\n                                ¿Cómo saber antes de entrar si una empresa tiene un historial problemático de discriminación? Este TFG va a explorar el potencial de la tecnología blockchain para crear una plataforma transparente y no censurable, que permita a las personas conocer la reputación de empresas antes de aceptar trabajar para ellas. A través de esta plataforma, se podrán:\n                            </p>\n                            <p color= '#3949ab'>\n                                (1) buscar denuncias a entidades por discriminaciones sociales (por edad, género, etnia, nacionalidad, orientación sexual, etc)\n                            </p>\n                            <p color= '#3949ab'> \n                                (2) realizar denuncias anónimas compartiendo relatos sobre situaciones vividas\n                            </p>\n                            <p color= '#3949ab'> \n                                (3) aportar información de la propia empresa sobre sus esfuerzos para paliar la discriminación\n                            </p>\n                            <p color= '#3949ab'>\n                                (4) proporcionar la reputación acumulada de las empresas con la información disponible\n                            </p>\n                        </Typography>\n\n                    </Grid.Row>\n                </Paper>  \n            </Grid>                    \n\n        </Container>\n    )\n}\n\nexport default ContainerExampleText","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Graphics/ComposedChart.js",["185","186","187"],"import React, { PureComponent } from 'react';\nimport {\n  ComposedChart, Line,Area, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer} from 'recharts';\n\n  const data = [\n    {\n      name: \"Telefónica\",\n      reputation: 590\n    },\n    {\n      name: \"Deloitte\",\n      reputation: 868\n    },\n    {\n      name: \"KPMG\",\n      reputation: 1397\n    },\n    {\n      name: \"Renfe\",\n      reputation: 1480\n    },\n    {\n      name: \"MS\",\n      reputation: 1520\n    }\n  ];\n  \n  export default function BarChart({colorBarra,colorLinea}) {\n    return (\n      <ComposedChart\n        width={500}\n        height={400}\n        data={data}\n        margin={{\n          top: 20,\n          right: 20,\n          bottom: 20,\n          left: 20\n        }}\n      >\n        <CartesianGrid stroke=\"#f5f5f5\" />\n        <XAxis dataKey=\"name\" scale=\"band\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"reputation\" barSize={25} fill={colorBarra} />\n        <Line type=\"monotone\" dataKey=\"reputation\" stroke={colorLinea} />\n      </ComposedChart>\n    );\n  }\n  ","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Company/historyItem.js",[],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Graphics/CircularGraph.js",["188","189","190","191","192","193"],"import React from 'react'\nimport { Box, Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\n\nimport {\n    PieChart,\n    Pie,\n    Legend,\n    Cell,\n    Tooltip\n} from 'recharts'\nconst RADIAN = Math.PI / 180;\n\nconst COLORES = [ '#7fb3d5' , '#2980b9' , '#1f618d' , '#154360' ];\n\nconst data01 = [\n    {\n      \"name\": \"Mujeres\",\n      \"value\": 400\n    },\n    {\n      \"name\": \"Hombres\",\n      \"value\": 300\n    },\n    {\n      \"name\": \"No binario\",\n      \"value\": 300\n    },\n    {\n      \"name\": \"Otros\",\n      \"value\": 200\n    }\n  ];\n  const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  \n    return (\n      <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n        {`${(percent * 100).toFixed(0)}%`}\n      </text>\n    );\n  };      \n\n\nexport default function CircularGraph() {\n\n\n  return (\n  \n    <PieChart width={400} height={400}>\n    <Pie\n        data={data01}\n        cx=\"50%\"\n        cy=\"50%\"\n        labelLine={false}\n        label={renderCustomizedLabel}\n        outerRadius={80}\n        fill=\"#5dade2\"\n        dataKey=\"value\"\n      >\n        {data01.map((entry, index) => (\n                        <Cell\n                            key={`cell-${index}`}\n                            fill={COLORES[index % COLORES.length]}\n                            \n                        />\n                    ))}\n      </Pie>\n      <Legend align=\"left\" verticalAlign=\"middle\" width=\"33.3%\" />\n      <Tooltip />\n    </PieChart>\n  );\n}\n","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/TFGInfo/DonationCard.js",["194","195","196","197","198","199"],"import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport MainCard from './MainCard';\n// material-ui\nimport { styled } from '@mui/material/styles';\nimport {  Box, Grid, Typography } from '@mui/material';\nimport { makeStyles } from '@material-ui/core/styles'\nimport SendIcon from '@material-ui/icons/Send';\nimport {  Paper} from '@material-ui/core';\n\n// project imports\nimport Button from 'semantic-ui-react';\n\n\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    backgroundColor: '#fff8ae ',\n    margin: '1rem',\n    overflow: 'hidden',\n    position: 'relative',\n    '&>div': {\n        position: 'relative',\n        zIndex: 5\n    },\n}));\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    button: {\n        color: '#bbdefb' , \n        backgroundColor: '#6495ED'\n    },\n    paper: {\n        padding: theme.spacing(2),\n        margin: 'auto',\n        maxWidth: 1000,\n        backgroundColor: '#fff '\n    },\n  }));\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\n\nconst DonationCard = ({ isLoading }) => {\n    const classes = useStyles();\n    return (\n/*         <Paper padding = {20} className={classes.paper}>\n */            \n                <CardWrapper border={false} content={false}>\n                    <Box sx={{ p: 2.25 }}>\n                        <Grid container direction=\"column\">\n                            <Grid item sx={{ mb: 0.75 }}>\n                                <Grid container alignItems=\"center\">\n                                    <Grid item xs={8}>\n                                        <Grid container alignItems=\"center\">\n                                            <Grid item xs={10}>\n                                                <p></p>\n                                                <Typography\n                                                    margin = {5}\n                                                    sx={{\n                                                        fontSize: '2rem',\n                                                        fontWeight: 500,\n                                                        color: '#276fe6 '\n                                                    }}\n                                                    align='left'\n                                                >\n                                                    Total Recaudado\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item xs={10}>\n                                                \n                                                <Typography \n                                                    margin = {5} \n                                                    sx={{ fontSize: '3rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75, color: '#4f87e4 ' }}\n                                                    align='left'>\n                                                    10 ether\n                                                </Typography>\n                                                <p></p>\n                                            </Grid>\n                                           \n                                        </Grid>\n\n                                    </Grid>\n                                    <Grid item xs={4}>\n                                        {/* <button className = {classes.button}  size = \"large\" variant=\"contained\" endIcon={<SendIcon />} >\n                                            Dona Aquí \n                                        </button> */}\n{/*                                         <button class=\"ui yellow basic button huge\"  >Dona Aquí</button>\n */}                                        <button class=\"ui blue button huge \">DONA AQUÍ</button>\n                                    </Grid>\n                                    \n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </CardWrapper>\n            \n/*         </Paper>\n */    );\n};\n\n\n\nexport default DonationCard;\n","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/TFGInfo/MainCard.js",[],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/TFGInfo/MemberCard.js",["200","201","202","203","204","205","206"],"import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Image } from 'semantic-ui-react'\n\nimport MainCard from './MainCard';\n// material-ui\nimport { styled } from '@mui/material/styles';\nimport {  Box, Grid, Typography } from '@mui/material';\nimport { makeStyles } from '@material-ui/core/styles'\nimport SendIcon from '@material-ui/icons/Send';\nimport {  Paper} from '@material-ui/core';\nimport image from '../../Images/member.png'\n\n// project imports\nimport Button from 'semantic-ui-react';\n\n\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\n    backgroundColor: '#fff',\n    margin: '1rem',\n    overflow: 'hidden',\n    position: 'relative',\n    maxWidth: 400,\n    '&>div': {\n        position: 'relative',\n        zIndex: 5\n    },\n}));\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    button: {\n        color: '#bbdefb' , \n        backgroundColor: '#6495ED'\n    },\n    paper: {\n        padding: theme.spacing(2),\n        margin: 'auto',\n        maxWidth: 1000,\n        backgroundColor: '#fff '\n    },\n  }));\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\n\nconst MemberCard = ({ isLoading }) => {\n    const classes = useStyles();\n    return (\n/*         <Paper padding = {20} className={classes.paper}>\n */            \n                <CardWrapper border={false} content={false}>\n                    <Box sx={{ p: 1 }} margin = {2}>\n                        <Typography\n                            margin = {2}\n                            sx={{\n                                fontSize: '2rem',\n                                fontWeight: 500,\n                                color: '#276fe6 '\n                            }}\n                            align='center'\n                        >\n                            Miembro del equipo\n                        </Typography>\n                        <Typography\n                            margin = {2}\n                            sx={{\n                                fontSize: '1.5rem',\n                                fontWeight: 500,\n                                color: '#4f87e4 '\n                            }}\n                            align='center'\n                        >\n                            Frase identificativa o labor\n                        </Typography>\n                        <p></p>\n                        <Box margin = {4}>\n                            <Image\n                            margin='3rem'\n                            padding = '3rem'\n                            centered\n                            size='tiny'\n                            src={image}\n                        />\n                        </Box>\n                        \n\n                    </Box>\n                </CardWrapper>\n            \n/*         </Paper>\n */    );\n};\n\n\n\nexport default MemberCard;\n",{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":124,"column":11,"nodeType":"213","messageId":"214","endLine":124,"endColumn":16},{"ruleId":"211","severity":1,"message":"215","line":1,"column":27,"nodeType":"213","messageId":"214","endLine":1,"endColumn":37},{"ruleId":"211","severity":1,"message":"216","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":16},{"ruleId":"211","severity":1,"message":"217","line":2,"column":18,"nodeType":"213","messageId":"214","endLine":2,"endColumn":22},{"ruleId":"211","severity":1,"message":"218","line":2,"column":24,"nodeType":"213","messageId":"214","endLine":2,"endColumn":29},{"ruleId":"211","severity":1,"message":"219","line":4,"column":18,"nodeType":"213","messageId":"214","endLine":4,"endColumn":21},{"ruleId":"211","severity":1,"message":"220","line":4,"column":23,"nodeType":"213","messageId":"214","endLine":4,"endColumn":28},{"ruleId":"211","severity":1,"message":"221","line":9,"column":10,"nodeType":"213","messageId":"214","endLine":9,"endColumn":20},{"ruleId":"222","severity":1,"message":"223","line":77,"column":5,"nodeType":"224","endLine":77,"endColumn":7,"suggestions":"225"},{"ruleId":"211","severity":1,"message":"226","line":1,"column":10,"nodeType":"213","messageId":"214","endLine":1,"endColumn":23},{"ruleId":"211","severity":1,"message":"227","line":48,"column":11,"nodeType":"213","messageId":"214","endLine":48,"endColumn":16},{"ruleId":"228","severity":1,"message":"229","line":52,"column":14,"nodeType":"230","messageId":"231","endLine":52,"endColumn":16},{"ruleId":"211","severity":1,"message":"232","line":56,"column":9,"nodeType":"213","messageId":"214","endLine":56,"endColumn":16},{"ruleId":"233","severity":1,"message":"234","line":120,"column":13,"nodeType":"235","endLine":120,"endColumn":59},{"ruleId":"211","severity":1,"message":"236","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"237","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":12},{"ruleId":"211","severity":1,"message":"238","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":17},{"ruleId":"211","severity":1,"message":"239","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":24},{"ruleId":"211","severity":1,"message":"240","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":19},{"ruleId":"211","severity":1,"message":"241","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":17},{"ruleId":"211","severity":1,"message":"242","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":18},{"ruleId":"211","severity":1,"message":"243","line":8,"column":8,"nodeType":"213","messageId":"214","endLine":8,"endColumn":13},{"ruleId":"211","severity":1,"message":"244","line":9,"column":8,"nodeType":"213","messageId":"214","endLine":9,"endColumn":14},{"ruleId":"211","severity":1,"message":"245","line":10,"column":8,"nodeType":"213","messageId":"214","endLine":10,"endColumn":16},{"ruleId":"211","severity":1,"message":"246","line":11,"column":8,"nodeType":"213","messageId":"214","endLine":11,"endColumn":14},{"ruleId":"211","severity":1,"message":"247","line":12,"column":9,"nodeType":"213","messageId":"214","endLine":12,"endColumn":14},{"ruleId":"211","severity":1,"message":"248","line":12,"column":16,"nodeType":"213","messageId":"214","endLine":12,"endColumn":22},{"ruleId":"211","severity":1,"message":"249","line":14,"column":8,"nodeType":"213","messageId":"214","endLine":14,"endColumn":22},{"ruleId":"211","severity":1,"message":"250","line":17,"column":8,"nodeType":"213","messageId":"214","endLine":17,"endColumn":17},{"ruleId":"211","severity":1,"message":"251","line":19,"column":3,"nodeType":"213","messageId":"214","endLine":19,"endColumn":22},{"ruleId":"211","severity":1,"message":"252","line":31,"column":7,"nodeType":"213","messageId":"214","endLine":31,"endColumn":20},{"ruleId":"211","severity":1,"message":"253","line":39,"column":9,"nodeType":"213","messageId":"214","endLine":39,"endColumn":16},{"ruleId":"211","severity":1,"message":"254","line":1,"column":16,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"255","line":11,"column":11,"nodeType":"213","messageId":"214","endLine":11,"endColumn":26},{"ruleId":"211","severity":1,"message":"256","line":50,"column":10,"nodeType":"213","messageId":"214","endLine":50,"endColumn":20},{"ruleId":"211","severity":1,"message":"236","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":18},{"ruleId":"211","severity":1,"message":"257","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":25,"column":11,"nodeType":"213","messageId":"214","endLine":25,"endColumn":16},{"ruleId":"211","severity":1,"message":"236","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"215","line":1,"column":27,"nodeType":"213","messageId":"214","endLine":1,"endColumn":37},{"ruleId":"211","severity":1,"message":"258","line":1,"column":39,"nodeType":"213","messageId":"214","endLine":1,"endColumn":48},{"ruleId":"211","severity":1,"message":"259","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":17},{"ruleId":"211","severity":1,"message":"260","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":12},{"ruleId":"211","severity":1,"message":"261","line":4,"column":13,"nodeType":"213","messageId":"214","endLine":4,"endColumn":22},{"ruleId":"211","severity":1,"message":"262","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":25},{"ruleId":"211","severity":1,"message":"263","line":6,"column":41,"nodeType":"213","messageId":"214","endLine":6,"endColumn":56},{"ruleId":"211","severity":1,"message":"237","line":17,"column":9,"nodeType":"213","messageId":"214","endLine":17,"endColumn":13},{"ruleId":"211","severity":1,"message":"219","line":17,"column":23,"nodeType":"213","messageId":"214","endLine":17,"endColumn":26},{"ruleId":"211","severity":1,"message":"264","line":18,"column":8,"nodeType":"213","messageId":"214","endLine":18,"endColumn":19},{"ruleId":"211","severity":1,"message":"265","line":19,"column":10,"nodeType":"213","messageId":"214","endLine":19,"endColumn":23},{"ruleId":"266","severity":1,"message":"267","line":96,"column":38,"nodeType":"268","messageId":"269","endLine":96,"endColumn":40},{"ruleId":"211","severity":1,"message":"270","line":2,"column":18,"nodeType":"213","messageId":"214","endLine":2,"endColumn":22},{"ruleId":"211","severity":1,"message":"236","line":4,"column":10,"nodeType":"213","messageId":"214","endLine":4,"endColumn":18},{"ruleId":"211","severity":1,"message":"257","line":5,"column":10,"nodeType":"213","messageId":"214","endLine":5,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":26,"column":11,"nodeType":"213","messageId":"214","endLine":26,"endColumn":16},{"ruleId":"211","severity":1,"message":"271","line":1,"column":10,"nodeType":"213","messageId":"214","endLine":1,"endColumn":16},{"ruleId":"211","severity":1,"message":"270","line":1,"column":18,"nodeType":"213","messageId":"214","endLine":1,"endColumn":22},{"ruleId":"211","severity":1,"message":"272","line":4,"column":10,"nodeType":"213","messageId":"214","endLine":4,"endColumn":19},{"ruleId":"211","severity":1,"message":"237","line":4,"column":21,"nodeType":"213","messageId":"214","endLine":4,"endColumn":25},{"ruleId":"211","severity":1,"message":"248","line":7,"column":10,"nodeType":"213","messageId":"214","endLine":7,"endColumn":16},{"ruleId":"211","severity":1,"message":"219","line":7,"column":18,"nodeType":"213","messageId":"214","endLine":7,"endColumn":21},{"ruleId":"211","severity":1,"message":"220","line":7,"column":23,"nodeType":"213","messageId":"214","endLine":7,"endColumn":28},{"ruleId":"211","severity":1,"message":"248","line":7,"column":10,"nodeType":"213","messageId":"214","endLine":7,"endColumn":16},{"ruleId":"211","severity":1,"message":"219","line":7,"column":18,"nodeType":"213","messageId":"214","endLine":7,"endColumn":21},{"ruleId":"211","severity":1,"message":"273","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":30},{"ruleId":"211","severity":1,"message":"274","line":3,"column":23,"nodeType":"213","messageId":"214","endLine":3,"endColumn":27},{"ruleId":"211","severity":1,"message":"251","line":3,"column":80,"nodeType":"213","messageId":"214","endLine":3,"endColumn":99},{"ruleId":"211","severity":1,"message":"219","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":13},{"ruleId":"211","severity":1,"message":"217","line":2,"column":15,"nodeType":"213","messageId":"214","endLine":2,"endColumn":19},{"ruleId":"211","severity":1,"message":"275","line":2,"column":21,"nodeType":"213","messageId":"214","endLine":2,"endColumn":32},{"ruleId":"211","severity":1,"message":"276","line":2,"column":34,"nodeType":"213","messageId":"214","endLine":2,"endColumn":44},{"ruleId":"211","severity":1,"message":"277","line":2,"column":46,"nodeType":"213","messageId":"214","endLine":2,"endColumn":53},{"ruleId":"211","severity":1,"message":"278","line":2,"column":55,"nodeType":"213","messageId":"214","endLine":2,"endColumn":65},{"ruleId":"211","severity":1,"message":"279","line":1,"column":8,"nodeType":"213","messageId":"214","endLine":1,"endColumn":17},{"ruleId":"211","severity":1,"message":"236","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":18},{"ruleId":"211","severity":1,"message":"280","line":8,"column":8,"nodeType":"213","messageId":"214","endLine":8,"endColumn":16},{"ruleId":"211","severity":1,"message":"220","line":9,"column":11,"nodeType":"213","messageId":"214","endLine":9,"endColumn":16},{"ruleId":"211","severity":1,"message":"248","line":12,"column":8,"nodeType":"213","messageId":"214","endLine":12,"endColumn":14},{"ruleId":"211","severity":1,"message":"253","line":43,"column":11,"nodeType":"213","messageId":"214","endLine":43,"endColumn":18},{"ruleId":"211","severity":1,"message":"279","line":1,"column":8,"nodeType":"213","messageId":"214","endLine":1,"endColumn":17},{"ruleId":"211","severity":1,"message":"236","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":18},{"ruleId":"211","severity":1,"message":"237","line":8,"column":16,"nodeType":"213","messageId":"214","endLine":8,"endColumn":20},{"ruleId":"211","severity":1,"message":"280","line":10,"column":8,"nodeType":"213","messageId":"214","endLine":10,"endColumn":16},{"ruleId":"211","severity":1,"message":"220","line":11,"column":11,"nodeType":"213","messageId":"214","endLine":11,"endColumn":16},{"ruleId":"211","severity":1,"message":"248","line":15,"column":8,"nodeType":"213","messageId":"214","endLine":15,"endColumn":14},{"ruleId":"211","severity":1,"message":"253","line":47,"column":11,"nodeType":"213","messageId":"214","endLine":47,"endColumn":18},"no-native-reassign",["281"],"no-negated-in-lhs",["282"],"no-unused-vars","'theme' is assigned a value but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'Rating' is defined but never used.","'Card' is defined but never used.","'Image' is defined but never used.","'Box' is defined but never used.","'Paper' is defined but never used.","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'nameCompany'. Either include it or remove the dependency array.","ArrayExpression",["283"],"'createContext' is defined but never used.","'cards' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'n_elems' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'Grid' is defined but never used.","'TextField' is defined but never used.","'FormControlLabel' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'RadioGroup' is defined but never used.","'Radio' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'Slider' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'GraphicsLayout' is defined but never used.","'reduxForm' is defined but never used.","'ResponsiveContainer' is defined but never used.","'defaultValues' is assigned a value but never used.","'classes' is assigned a value but never used.","'Component' is defined but never used.","'getInitialProps' is defined but never used.","'renderInfo' is defined but never used.","'styled' is defined but never used.","'useEffect' is defined but never used.","'context' is defined but never used.","'Web3' is defined but never used.","'constants' is defined but never used.","'complaintContract' is defined but never used.","'MTableFilterRow' is defined but never used.","'historyItem' is defined but never used.","'letterSpacing' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Icon' is defined but never used.","'Header' is defined but never used.","'Container' is defined but never used.","'PureComponent' is defined but never used.","'Area' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'Divider' is defined but never used.","'Typography' is defined but never used.","'PropTypes' is defined but never used.","'SendIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"284","fix":"285"},"Update the dependencies array to be: [nameCompany]",{"range":"286","text":"287"},[2258,2260],"[nameCompany]"]