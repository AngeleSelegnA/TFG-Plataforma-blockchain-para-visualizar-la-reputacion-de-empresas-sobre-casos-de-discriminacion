[{"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/index.js":"1","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/contextProvider.js":"2","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/App.js":"3","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/constantFile.js":"4","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/themes/theme.js":"5","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Home/home.js":"6","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/User/user.js":"7","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Menu/menu.js":"8","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Company/company.js":"9","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/TFGInfo/TFGInfo.js":"10","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Home/CompanyItem.js":"11","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Company/Complaints.js":"12","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Basic/BasicTable.js":"13","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/TFGInfo/Header.js":"14","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/TFGInfo/Container.js":"15","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Form/form.js":"16","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Graphics/CircularGraph.js":"17","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Graphics/GraphicsLayout.js":"18","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Company/CompanyTable.js":"19","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Company/HeaderCompany.js":"20"},{"size":277,"mtime":1645434901832,"results":"21","hashOfConfig":"22"},{"size":521,"mtime":1645434901832,"results":"23","hashOfConfig":"22"},{"size":1057,"mtime":1645556024248,"results":"24","hashOfConfig":"22"},{"size":380,"mtime":1645435263391,"results":"25","hashOfConfig":"22"},{"size":515,"mtime":1645975457200,"results":"26","hashOfConfig":"22"},{"size":3886,"mtime":1645983026739,"results":"27","hashOfConfig":"22"},{"size":7962,"mtime":1644757121227,"results":"28","hashOfConfig":"22"},{"size":1117,"mtime":1645556055877,"results":"29","hashOfConfig":"22"},{"size":4369,"mtime":1645982752351,"results":"30","hashOfConfig":"22"},{"size":3112,"mtime":1644756214765,"results":"31","hashOfConfig":"22"},{"size":858,"mtime":1645982611166,"results":"32","hashOfConfig":"22"},{"size":304,"mtime":1644603237310,"results":"33","hashOfConfig":"22"},{"size":1785,"mtime":1645268564043,"results":"34","hashOfConfig":"22"},{"size":496,"mtime":1644603521643,"results":"35","hashOfConfig":"22"},{"size":1815,"mtime":1644603521640,"results":"36","hashOfConfig":"22"},{"size":4231,"mtime":1645982780486,"results":"37","hashOfConfig":"22"},{"size":1726,"mtime":1645954167636,"results":"38","hashOfConfig":"22"},{"size":2101,"mtime":1645957093529,"results":"39","hashOfConfig":"22"},{"size":6745,"mtime":1645976715436,"results":"40","hashOfConfig":"22"},{"size":420,"mtime":1645960331826,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"70ne47",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/index.js",[],["91","92"],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/contextProvider.js",[],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/App.js",[],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/constantFile.js",[],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/themes/theme.js",[],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Home/home.js",["93","94"],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/User/user.js",["95"],"import React, { useEffect, useState } from 'react';\nimport linkedin_logo from '../../Images/linkedin_logo.png';\nimport styles from './user.module.css';\nimport {context} from '../../contextProvider.js';\nimport Web3 from 'web3';\nimport * as constants from './../../constantFile.js';\nimport complaintContract from './../../complaintContract.json';\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst User = () => {\n    //Variable y setter para mostrar u ocultar el formulario\n    const [showForm, setShowForm] = useState(false);\n\n    //Variable que va a contener las empresas que apareceran como opcion en el formulario\n    const [companies, setCompanies] = useState([]);\n\n    //Datos del formulario\n    const [input, setInput] = useState('');\n    const [company, setCompany] = useState('');\n\n    //Cantidad a donar (en caso de que donen)\n    const [donationQuantity, setDonationQuantity] = useState(0);\n\n    //Se obtiene el usuario (se comprueba si hay un usuario logeado o no)\n    const user = React.useContext(context);\n    \n    //Delegamos al servidor la autenticacion\n    const verifyLinkedIn = () => { window.location.href = `${constants.SERVER_URL}/auth/linkedin`};\n\n    //Delegamos al servidor el cierre de sesion\n    const logOut = () => { window.location.href = `${constants.SERVER_URL}/logout`};\n   \n    //Desplegar el formulario\n    const showFormF = () => { setShowForm(!showForm); };\n\n    //Se guarda la empresa escogida\n    const handleCompany = (e) => { setCompany(e.target.value); }\n\n    //Se guardan los datos escritos en el formulario de denuncia\n    const handleInput = (e) => { \n         setInput(e.target.value); \n    };\n\n    //Se guarda el valor escrito en el formulario de donación\n    const handleDonation = (e) => {\n        setDonationQuantity(e.target.value);\n    }\n\n    //Función para realizar la transaccion al recibir los parametros\n    async function newComplaint(web3, address, transaction) {\n            try {\n                const tx = {\n                    to      : transaction._parent._address, //Dirección del contrato\n                    data    : transaction.encodeABI(),      //\n                    gas     : await transaction.estimateGas({from: address}),   //Se estima el coste en gas\n                    gasPrice: await web3.eth.getGasPrice(),   //Precio del gas\n                    gaslimit: 0x1000000,   //Limite de gas que se puede gastar\n                    value   : 0,   //No se va a realizar una transferencia\n                };\n                //Se firma la transacción con la clave privada\n                const signedTx  = await web3.eth.accounts.signTransaction(tx, constants.PRIVATE_KEY);\n                //Se envia la transaccion firmada \n                web3.eth.sendSignedTransaction(signedTx.rawTransaction);\n            }\n            catch (err) {\n                console.log(err.message);\n            }\n    }\n\n    //Para comprobar si tienen proveedor (Metamask) de forma que puedan donar\n    const hasProvider = !! Web3.givenProvider;\n\n    //Obtenemos las empresas del smart contract, conectandonos al nodo de Infura\n    useEffect(() => {\n        const infuraUrl = constants.INFURA_URL;\n        //Crea una instancia para comunicarse con el nodo indicado\n        const web3 = new Web3(new Web3.providers.HttpProvider(infuraUrl));\n        //Se conectaria con el contrato\n        const contract = new web3.eth.Contract(complaintContract.abi, constants.CONTRACT_ADDRESS);\n        //Obtenemos el array de empresas\n        contract.methods.getCompanies().call().then(response => setCompanies(response));\n    },[]);\n\n    //Función que trata el submit en el formulario de denuncias\n    const handleSubmit = async(e) => { \n        e.preventDefault();\n        //Si todavia no se ha conectado con Metamask entonces aparece un popup para la conexion\n        const infuraUrl = constants.INFURA_URL;\n        //Crea una instancia para comunicarse con el nodo indicado\n        const web3 = new Web3(new Web3.providers.HttpProvider(infuraUrl));\n        //Nos conectamos con el contrato\n        const contract = new web3.eth.Contract(complaintContract.abi, constants.CONTRACT_ADDRESS);\n        //Realizamos la denuncia\n        newComplaint(web3, constants.ADDRESS, contract.methods.newComplaint(company,user,input));\n        setInput('');\n    };\n\n    //Función que trata el submit en el caso de donaciones\n    const handleSubmitDonation = async(e) => {\n        e.preventDefault();\n        //Si todavia no se ha conectado con Metamask entonces aparece un popup para la conexion\n        const web3 = new Web3(window.web3.currentProvider);\n        const accounts = await window.ethereum.enable();\n        \n        //No hace falta que firmemos la transacción ya que Metamask lo hace por nosotros\n        web3.eth.sendTransaction(\n            {\n                to: constants.ADDRESS,\n                from: accounts[0],\n                value: web3.utils.toWei(donationQuantity, 'ether'), //Se transfiere la cantidad introducida en el formulario\n            },(err) => {\n                if (err) console.log(err.message);\n            })\n    \n        setDonationQuantity(0);\n    }\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          backgroundColor: theme.palette.primary.main\n        }\n    }));\n\n    const theme = useStyles();\n      \n    if(!user){\n        return <div className={styles.container} >\n            <div className={styles.loginGeneral}>\n                <div className={styles.loginBox}>\n                    <h1>Login</h1>\n                    <div className={styles.loginButton} onClick={verifyLinkedIn}>\n                        <img src={linkedin_logo} alt=\"Linkedin Logo\"/>\n                        <p>Verify your identity with LinkedIn</p>\n                    </div>\n                    <div className={styles.reminderText}>\n                        <p>Please note that that logging in is necessary for <strong>identification</strong> purposes:</p>\n                        <ul className={styles.infoList}>\n                          <li>Your personal information will <strong>not</strong> be published or stored.</li>\n                          <li>Sensitive data will <strong>not</strong> be accessed.</li>\n                          <li>Your report will be <strong>anonymous</strong>.</li>\n                          <li>A randomized name will be assigned to you in order to show the report.</li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    }\n    else{\n        return <div className={styles.userPanel}>\n            <h1>User Panel</h1>\n            {showForm && (\n                <form onSubmit={handleSubmit} className={styles.reportForm}>\n                  <label>Report Form</label>\n                  <label>In which company did the incident take place?</label>\n                  <select onChange={handleCompany}>\n                     {companies.map(item => <option value={item} key={item}>{item}</option>)}\n                  </select>\n                  <label>Please, explain briefly what happened.</label>\n                  <input type=\"textarea\" name=\"explanation\" value={input} onChange={handleInput} />\n                  <button>Submit</button>\n                </form>\n            )}\n            \n            <div className={styles.buttonPanel}>\n                <button onClick={showFormF} className={styles.panelButton}>Show/Hide Report</button>\n                <button onClick={logOut} className={styles.panelButton}>Log Out</button>\n            </div>\n\n            {hasProvider && (<div>\n              <h3>Please, feel free to suport this platform by donating.</h3>\n              <form onSubmit={handleSubmitDonation} className={styles.reportForm}>\n                <input type=\"textarea\" name=\"donationInput\" value={donationQuantity} onChange={handleDonation} />\n                <button>Donate</button> \n             </form>\n            </div>)}\n\n        </div>\n    }\n    \n}\n\nexport default User\n","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Menu/menu.js",[],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Company/company.js",["96","97","98","99","100","101"],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/TFGInfo/TFGInfo.js",["102","103"],"import React, {Component} from \"react\";\nimport {Card, Grid} from 'semantic-ui-react';\nimport Container from './Container';\nimport Header from './Header';\nimport { makeStyles } from '@material-ui/core/styles'\n\n    \nfunction  getInitialProps () {\n    const info = [\n        {\n            header: 'Alex',\n            meta: 'Miembro 1',\n            description: 'Empresa de telefonía'\n        },\n        {\n            header: 'Ana',\n            meta: 'Miembro  2',\n            description: 'Empresa inversora en I+D'\n        },\n        {\n            header: 'Javi',\n            meta: 'Miembro 3',\n            description: 'Añadir info'\n        },\n        {\n            header: 'Ángeles',\n            meta: 'Miembro 4',\n            description: 'Empresa de telefonía'\n        },\n        {\n            header: 'Jorge',\n            meta: 'Miembro 5',\n            description: 'Empresa inversora en I+D'\n        },\n        {\n            header: 'David',\n            meta: 'Miembro 6',\n            description: 'Empresa especializada en consultoría'\n        }\n    \n    ];\n    return {info};\n    //es lo mismo que poner return{campaings:campaigns}\n}\n\n\nfunction renderInfo(){\n    const info = [\n        {\n            header: 'Alex',\n            meta: 'Estudiante',\n            description: 'Añadir info'\n        },\n        {\n            header: 'Ana',\n            meta: 'Estudiante',\n            description: 'Añadir info'\n        },\n        {\n            header: 'Javi',\n            meta: 'Estudiante',\n            description: 'Añadir info'\n        },\n        {\n            header: 'Ángeles',\n            meta: 'Estudiante',\n            description: 'Añadir info'\n        },\n        {\n            header: 'Jorge',\n            meta: 'Estudiante',\n            description: 'Añadir info'\n        },\n        {\n            header: 'David',\n            meta: 'Estudiante',\n            description: 'Añadir info'\n        }\n    \n    ];\n    return <Card.Group items = {info} />;\n}\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      backgroundColor: theme.palette.primary.main\n    }\n  }));\n\n  \nfunction Info (){\n\n        const theme = useStyles();\n        return (\n\n            \n            <div className={theme.root}>\n                <Grid>\n                    <Grid.Row >\n                        <Grid.Column width = {16}>\n                            <Header/>\n                        </Grid.Column>\n                        \n                    </Grid.Row>\n                    <Grid.Row>\n                        <Container/>\n                    </Grid.Row>\n                    <Grid.Row >\n                        <Grid.Column width = {3} >\n                            \n                        </Grid.Column>\n                        <Grid.Column width = {12} >\n                            {renderInfo()}\n                        </Grid.Column>\n                        <Grid.Column width = {3} >\n                             \n                        </Grid.Column>\n                        \n                    </Grid.Row>\n                </Grid>\n            </div>\n\n        )\n\n\n    \n}\n\nexport default Info;","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Home/CompanyItem.js",[],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Company/Complaints.js",[],["104","105"],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Basic/BasicTable.js",[],["106","107"],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/TFGInfo/Header.js",["108"],"import React from 'react'\nimport { Header, Icon, Image } from 'semantic-ui-react'\nimport image from '../../Images/fdi_logo.png'\n\nconst HeaderExampleUsersIcon = () => (\n  <div>\n    <Header as='h2' icon textAlign='center' block >\n      <Header.Content>Plataforma Blockchain para visualizar la Reputación de empresas sobre casos de Discriminación</Header.Content>\n    </Header>\n    <Image\n      centered\n      size='large'\n      src={image}\n    />\n  </div>\n)\n\nexport default HeaderExampleUsersIcon","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/TFGInfo/Container.js",[],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Form/form.js",["109"],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Graphics/CircularGraph.js",["110","111","112","113","114","115"],"import React from 'react'\nimport { Box, Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\n\nimport {\n    PieChart,\n    Pie,\n    Legend,\n    Cell,\n    Tooltip\n} from 'recharts'\nconst RADIAN = Math.PI / 180;\n\nconst COLORES = [ '#7fb3d5' , '#2980b9' , '#1f618d' , '#154360' ];\n\nconst data01 = [\n    {\n      \"name\": \"Mujeres\",\n      \"value\": 400\n    },\n    {\n      \"name\": \"Hombres\",\n      \"value\": 300\n    },\n    {\n      \"name\": \"No binario\",\n      \"value\": 300\n    },\n    {\n      \"name\": \"Otros\",\n      \"value\": 200\n    }\n  ];\n  const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  \n    return (\n      <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n        {`${(percent * 100).toFixed(0)}%`}\n      </text>\n    );\n  };      \n\n\nexport default function CircularGraph() {\n\n\n  return (\n  \n    <PieChart width={400} height={400}>\n    <Pie\n        data={data01}\n        cx=\"50%\"\n        cy=\"50%\"\n        labelLine={false}\n        label={renderCustomizedLabel}\n        outerRadius={80}\n        fill=\"#5dade2\"\n        dataKey=\"value\"\n      >\n        {data01.map((entry, index) => (\n                        <Cell\n                            key={`cell-${index}`}\n                            fill={COLORES[index % COLORES.length]}\n                            \n                        />\n                    ))}\n      </Pie>\n      <Legend align=\"left\" verticalAlign=\"middle\" width=\"33.3%\" />\n      <Tooltip />\n    </PieChart>\n  );\n}\n","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Graphics/GraphicsLayout.js",["116","117","118"],"\n\n\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport './graphics.css';\nimport CircularGraph from \"./CircularGraph\";\n\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  CardHeader, \n} from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles'\nconst COLORES = [ '#7fb3d5' , '#2980b9' , '#1f618d' , '#154360' ];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary.main\n  }\n}));\n\n  export default function GraphicsLayout(){\n    const theme = useStyles();\n  \n  \n    const data1 = [\n      {\n        name: 'Mujeres',\n        value: 33,\n        color: COLORES[0]\n      },\n      {\n        name: 'Hombres',\n        value: 25,\n        color: COLORES[1]\n      },\n      {\n        name: 'No binario',\n        value: 25,\n        color: COLORES[2]\n      },\n      {\n        name: 'Otros',\n        value: 17,\n        color: COLORES[3]\n      }\n    ];\n  \n    return (\n      <Card>\n        <CardHeader title=\"Gráfica\" />\n        <CardContent>\n          <Box class = 'Box'\n            sx={{\n              height: 300,\n              position: 'relative'\n            }}\n          >\n            <CircularGraph/>\n          </Box>\n          <Box \n            sx={{\n              display: 'flex',\n              justifyContent: 'center',\n              pt: 2\n            }}\n          >\n            {data1.map(({\n              color,\n              name,\n              value\n            }) => (\n              <Box \n                key={name}\n                sx={{\n                  p: 1,\n                  textAlign: 'center'\n                }}\n              >\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  {name}\n                </Typography>\n                <Typography\n                  style={{ color }}\n                  variant=\"h4\"\n                >\n                  {value}\n                  %\n                </Typography>\n              </Box>\n            ))}\n          </Box>\n        </CardContent>\n      </Card>\n    );\n  }","/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Company/CompanyTable.js",["119","120","121","122","123","124"],"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Company/HeaderCompany.js",["125"],"\nimport React from 'react'\nimport { Header, Icon, Image } from 'semantic-ui-react'\nimport telefonica from '../Home/telefonica.png';\n\nconst HeaderCompany = () => (\n  <div>\n    <Header as='h2' icon textAlign='center' block >\n      <Header.Content>\n         Company \n      </Header.Content>\n    </Header>\n    <Image\n      centered\n      size='large'\n      src={telefonica}\n    />\n  </div>\n)\n\nexport default  HeaderCompany \n",{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":44,"column":9,"nodeType":"132","messageId":"133","endLine":44,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":109,"column":10,"nodeType":"136","endLine":109,"endColumn":53},{"ruleId":"130","severity":1,"message":"137","line":124,"column":11,"nodeType":"132","messageId":"133","endLine":124,"endColumn":16},{"ruleId":"130","severity":1,"message":"138","line":1,"column":16,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"139","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":16},{"ruleId":"130","severity":1,"message":"140","line":2,"column":18,"nodeType":"132","messageId":"133","endLine":2,"endColumn":22},{"ruleId":"130","severity":1,"message":"141","line":2,"column":24,"nodeType":"132","messageId":"133","endLine":2,"endColumn":29},{"ruleId":"130","severity":1,"message":"142","line":3,"column":8,"nodeType":"132","messageId":"133","endLine":3,"endColumn":18},{"ruleId":"130","severity":1,"message":"143","line":5,"column":23,"nodeType":"132","messageId":"133","endLine":5,"endColumn":26},{"ruleId":"130","severity":1,"message":"138","line":1,"column":16,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"144","line":8,"column":11,"nodeType":"132","messageId":"133","endLine":8,"endColumn":26},{"ruleId":"126","replacedBy":"145"},{"ruleId":"128","replacedBy":"146"},{"ruleId":"126","replacedBy":"147"},{"ruleId":"128","replacedBy":"148"},{"ruleId":"130","severity":1,"message":"149","line":2,"column":18,"nodeType":"132","messageId":"133","endLine":2,"endColumn":22},{"ruleId":"130","severity":1,"message":"150","line":15,"column":3,"nodeType":"132","messageId":"133","endLine":15,"endColumn":22},{"ruleId":"130","severity":1,"message":"143","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":13},{"ruleId":"130","severity":1,"message":"140","line":2,"column":15,"nodeType":"132","messageId":"133","endLine":2,"endColumn":19},{"ruleId":"130","severity":1,"message":"151","line":2,"column":21,"nodeType":"132","messageId":"133","endLine":2,"endColumn":32},{"ruleId":"130","severity":1,"message":"152","line":2,"column":34,"nodeType":"132","messageId":"133","endLine":2,"endColumn":44},{"ruleId":"130","severity":1,"message":"153","line":2,"column":46,"nodeType":"132","messageId":"133","endLine":2,"endColumn":53},{"ruleId":"130","severity":1,"message":"154","line":2,"column":55,"nodeType":"132","messageId":"133","endLine":2,"endColumn":65},{"ruleId":"130","severity":1,"message":"155","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":18},{"ruleId":"130","severity":1,"message":"156","line":5,"column":10,"nodeType":"132","messageId":"133","endLine":5,"endColumn":16},{"ruleId":"130","severity":1,"message":"137","line":26,"column":11,"nodeType":"132","messageId":"133","endLine":26,"endColumn":16},{"ruleId":"130","severity":1,"message":"157","line":2,"column":41,"nodeType":"132","messageId":"133","endLine":2,"endColumn":56},{"ruleId":"130","severity":1,"message":"158","line":13,"column":9,"nodeType":"132","messageId":"133","endLine":13,"endColumn":13},{"ruleId":"130","severity":1,"message":"143","line":13,"column":23,"nodeType":"132","messageId":"133","endLine":13,"endColumn":26},{"ruleId":"134","severity":1,"message":"135","line":18,"column":60,"nodeType":"136","endLine":18,"endColumn":130},{"ruleId":"159","severity":1,"message":"160","line":135,"column":38,"nodeType":"161","messageId":"162","endLine":135,"endColumn":40},{"ruleId":"163","severity":1,"message":"164","line":162,"column":15,"nodeType":"165","messageId":"166","endLine":162,"endColumn":46},{"ruleId":"130","severity":1,"message":"149","line":3,"column":18,"nodeType":"132","messageId":"133","endLine":3,"endColumn":22},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'cards' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'theme' is assigned a value but never used.","'Component' is defined but never used.","'Rating' is defined but never used.","'Card' is defined but never used.","'Image' is defined but never used.","'telefonica' is defined but never used.","'Box' is defined but never used.","'getInitialProps' is defined but never used.",["167"],["168"],["167"],["168"],"'Icon' is defined but never used.","'ResponsiveContainer' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'Divider' is defined but never used.","'Typography' is defined but never used.","'useState' is defined but never used.","'styled' is defined but never used.","'MTableFilterRow' is defined but never used.","'Grid' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-global-assign","no-unsafe-negation"]