{"ast":null,"code":"var _jsxFileName = \"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/TFGInfo/BalanceCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { context } from './../../contextProvider.js';\nimport { ethers } from \"ethers\";\nimport MainCard from './MainCard';\nimport { Box, Grid, Typography } from '@mui/material';\nimport * as constants from './../../constantFile.js';\nimport { styled } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst provider = ethers.getDefaultProvider(\"rinkeby\"); //const balanceInit = provider.getBalance(constants.ADDRESS2);\n\nconst CardWrapper = styled(MainCard)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: '#fff  ',\n    margin: '1rem',\n    overflow: 'hidden',\n    position: 'relative',\n    '&>div': {\n      position: 'relative',\n      zIndex: 5\n    }\n  };\n});\n\nconst BalanceCard = () => {\n  _s();\n\n  const Context = React.useContext(context);\n  const [balance, setBalance] = useState(Context.balance);\n  useEffect(() => {\n    provider.getBalance(constants.ADDRESS2).then(balanceT => {\n      setBalance(ethers.utils.formatEther(balanceT));\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(CardWrapper, {\n    border: false,\n    content: false,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        margin: 2,\n        sx: {\n          fontSize: '2rem',\n          fontWeight: 500,\n          color: '#276fe6 '\n        },\n        align: \"center\",\n        children: \"Saldo disponible\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        margin: 2,\n        sx: {\n          fontSize: '1.5rem',\n          fontWeight: 500,\n          color: '#4f87e4 '\n        },\n        align: \"center\",\n        children: !balance ? \"Loading...\" : balance.slice(0, 6) + ' ETH'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BalanceCard, \"JeuaICN3bdmEG4jButKyCHXFGv0=\");\n\n_c = BalanceCard;\nexport default BalanceCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"BalanceCard\");","map":{"version":3,"sources":["/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/TFGInfo/BalanceCard.js"],"names":["React","useEffect","useState","context","ethers","MainCard","Box","Grid","Typography","constants","styled","provider","getDefaultProvider","CardWrapper","theme","backgroundColor","margin","overflow","position","zIndex","BalanceCard","Context","useContext","balance","setBalance","getBalance","ADDRESS2","then","balanceT","utils","formatEther","p","fontSize","fontWeight","color","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,QAAsC,eAAtC;AACA,OAAO,KAAKC,SAAZ,MAA2B,yBAA3B;AACA,SAASC,MAAT,QAAuB,sBAAvB;;AAEA,MAAMC,QAAQ,GAAGP,MAAM,CAACQ,kBAAP,CAA0B,SAA1B,CAAjB,C,CACA;;AAEA,MAAMC,WAAW,GAAGH,MAAM,CAACL,QAAD,CAAN,CAAiB;AAAA,MAAC;AAAES,IAAAA;AAAF,GAAD;AAAA,SAAgB;AACjDC,IAAAA,eAAe,EAAE,QADgC;AAEjDC,IAAAA,MAAM,EAAE,MAFyC;AAGjDC,IAAAA,QAAQ,EAAE,QAHuC;AAIjDC,IAAAA,QAAQ,EAAE,UAJuC;AAKjD,aAAS;AACLA,MAAAA,QAAQ,EAAE,UADL;AAELC,MAAAA,MAAM,EAAE;AAFH;AALwC,GAAhB;AAAA,CAAjB,CAApB;;AAWA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAMC,OAAO,GAAGrB,KAAK,CAACsB,UAAN,CAAiBnB,OAAjB,CAAhB;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAACmB,OAAO,CAACE,OAAT,CAAtC;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,QAAQ,CAACc,UAAT,CAAoBhB,SAAS,CAACiB,QAA9B,EAAwCC,IAAxC,CAA8CC,QAAD,IAAc;AACvDJ,MAAAA,UAAU,CAACpB,MAAM,CAACyB,KAAP,CAAaC,WAAb,CAAyBF,QAAzB,CAAD,CAAV;AACH,KAFD;AAIH,GALQ,CAAT;AAMA,sBACI,QAAC,WAAD;AAAa,IAAA,MAAM,EAAI,KAAvB;AAA8B,IAAA,OAAO,EAAI,KAAzC;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEG,QAAAA,CAAC,EAAE;AAAL,OAAT;AAAA,8BACI,QAAC,UAAD;AACI,QAAA,MAAM,EAAI,CADd;AAEI,QAAA,EAAE,EAAE;AACAC,UAAAA,QAAQ,EAAE,MADV;AAEAC,UAAAA,UAAU,EAAE,GAFZ;AAGAC,UAAAA,KAAK,EAAE;AAHP,SAFR;AAOI,QAAA,KAAK,EAAC,QAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI,QAAC,UAAD;AACI,QAAA,MAAM,EAAI,CADd;AAEI,QAAA,EAAE,EAAE;AACAF,UAAAA,QAAQ,EAAE,QADV;AAEAC,UAAAA,UAAU,EAAE,GAFZ;AAGAC,UAAAA,KAAK,EAAE;AAHP,SAFR;AAOI,QAAA,KAAK,EAAC,QAPV;AAAA,kBAQS,CAACX,OAAD,GAAW,YAAX,GAA0BA,OAAO,CAACY,KAAR,CAAc,CAAd,EAAgB,CAAhB,IAAqB;AARxD;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CArCD;;GAAMf,W;;KAAAA,W;AAsCN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { context } from './../../contextProvider.js';\r\nimport { ethers } from \"ethers\";\r\nimport MainCard from './MainCard';\r\nimport { Box, Grid, Typography } from '@mui/material';\r\nimport * as constants from './../../constantFile.js';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst provider = ethers.getDefaultProvider(\"rinkeby\");\r\n//const balanceInit = provider.getBalance(constants.ADDRESS2);\r\n\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n    backgroundColor: '#fff  ',\r\n    margin: '1rem',\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    '&>div': {\r\n        position: 'relative',\r\n        zIndex: 5\r\n    },\r\n}));\r\n\r\nconst BalanceCard = () => {\r\n\r\n    const Context = React.useContext(context);\r\n    const [balance, setBalance] = useState(Context.balance);\r\n\r\n    useEffect(() => {\r\n        provider.getBalance(constants.ADDRESS2).then((balanceT) => {\r\n            setBalance(ethers.utils.formatEther(balanceT))\r\n        })\r\n\r\n    });\r\n    return (\r\n        <CardWrapper border = {false} content = {false}>\r\n            <Box sx={{ p: 5 }}>\r\n                <Typography\r\n                    margin = {2}\r\n                    sx={{\r\n                        fontSize: '2rem',\r\n                        fontWeight: 500,\r\n                        color: '#276fe6 '\r\n                    }}\r\n                    align='center'>\r\n                        Saldo disponible \r\n                </Typography>\r\n                <Typography\r\n                    margin = {2}\r\n                    sx={{\r\n                        fontSize: '1.5rem',\r\n                        fontWeight: 500,\r\n                        color: '#4f87e4 '\r\n                    }}\r\n                    align='center'>\r\n                        {!balance ? \"Loading...\" : balance.slice(0,6) + ' ETH'}\r\n                </Typography>\r\n            </Box>\r\n        </CardWrapper>\r\n    );\r\n}\r\nexport default BalanceCard;\r\n"]},"metadata":{},"sourceType":"module"}