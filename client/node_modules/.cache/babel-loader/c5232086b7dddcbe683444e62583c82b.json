{"ast":null,"code":"var _jsxFileName = \"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Graphics/BarCharLayaout.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport './graphics.css';\nimport BarChart from './ComposedChart';\nimport { Box, Card, CardContent, Typography, CardHeader } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORES = ['#7fb3d5', '#2980b9', '#1f618d', '#154360'];\nconst ColoresGraficas = ['#5566F3'];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.primary.main\n  }\n}));\nexport default function BarChartLayaout(_ref) {\n  _s();\n\n  let {\n    titulo\n  } = _ref;\n  const theme = useStyles();\n  const data1 = [{\n    name: 'Telefónica',\n    value: 123,\n    color: COLORES[0]\n  }, {\n    name: 'Deloitte',\n    value: 25,\n    color: COLORES[1]\n  }, {\n    name: 'KPMG',\n    value: 25,\n    color: COLORES[2]\n  }, {\n    name: 'MS',\n    value: 17,\n    color: COLORES[3]\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: titulo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"Box\",\n        sx: {\n          height: 300,\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          colorBarra: ColoresGraficas[0],\n          colorLinea: COLORES[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          pt: 2\n        },\n        children: data1.map(_ref2 => {\n          let {\n            color,\n            name,\n            value\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 1,\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textPrimary\",\n              variant: \"body1\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                color\n              },\n              variant: \"h4\",\n              children: [value, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n\n_s(BarChartLayaout, \"jSTR40E72HSelYtSdgEOt4YwI9I=\", false, function () {\n  return [useStyles];\n});\n\n_c = BarChartLayaout;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChartLayaout\");","map":{"version":3,"sources":["/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Graphics/BarCharLayaout.js"],"names":["useState","styled","BarChart","Box","Card","CardContent","Typography","CardHeader","makeStyles","COLORES","ColoresGraficas","useStyles","theme","root","backgroundColor","palette","primary","main","BarChartLayaout","titulo","data1","name","value","color","height","position","display","justifyContent","pt","map","p","textAlign"],"mappings":"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","sourcesContent":["\nimport { useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport './graphics.css';\nimport BarChart from './ComposedChart';\n\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  CardHeader, \n} from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles'\nconst COLORES = [ '#7fb3d5' , '#2980b9' , '#1f618d' , '#154360' ];\nconst ColoresGraficas=['#5566F3'];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary.main\n  }\n}));\n\n  export default function BarChartLayaout({titulo}){\n    const theme = useStyles();\n  \n  \n    const data1 = [\n      {\n        name: 'Telefónica',\n        value: 123,\n        color: COLORES[0]\n      },\n      {\n        name: 'Deloitte',\n        value: 25,\n        color: COLORES[1]\n      },\n      {\n        name: 'KPMG',\n        value: 25,\n        color: COLORES[2]\n      },\n      {\n        name: 'MS',\n        value: 17,\n        color: COLORES[3]\n      }\n    ];\n  \n    return (\n      <Card>\n        <CardHeader title={titulo} />\n        <CardContent>\n          <Box className = 'Box'\n            sx={{\n              height: 300,\n              position: 'relative'\n            }}\n          >\n            <BarChart colorBarra={ColoresGraficas[0]} colorLinea={COLORES[1]} />\n          </Box>\n          <Box \n            sx={{\n              display: 'flex',\n              justifyContent: 'center',\n              pt: 2\n            }}\n          >\n            {data1.map(({\n              color,\n              name,\n              value\n            }) => (\n              <Box \n                key={name}\n                sx={{\n                  p: 1,\n                  textAlign: 'center'\n                }}\n              >\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  {name}\n                </Typography>\n                <Typography\n                  style={{ color }}\n                  variant=\"h4\"\n                >\n                  {value}\n                  %\n                </Typography>\n              </Box>\n            ))}\n          </Box>\n        </CardContent>\n      </Card>\n    );\n  }"]},"metadata":{},"sourceType":"module"}