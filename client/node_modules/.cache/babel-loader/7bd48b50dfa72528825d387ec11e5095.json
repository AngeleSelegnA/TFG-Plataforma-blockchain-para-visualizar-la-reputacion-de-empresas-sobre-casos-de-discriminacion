{"ast":null,"code":"var _jsxFileName = \"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/TFGInfo/DonationCard.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useState, useContext } from 'react';\nimport MainCard from './MainCard'; // material-ui\n\nimport { styled } from '@mui/material/styles';\nimport { Box, Grid, Typography, TextField } from '@mui/material';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport { Paper } from '@material-ui/core';\nimport { ethers } from \"ethers\";\nimport swal from 'sweetalert';\nimport Button from 'semantic-ui-react';\nimport { context } from './../../contextProvider.js';\nimport * as constants from './../../constantFile.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardWrapper = styled(MainCard)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    backgroundColor: '#FFF6DB ',\n    margin: '1rem',\n    overflow: 'hidden',\n    position: 'relative',\n    '&>div': {\n      position: 'relative',\n      zIndex: 5\n    }\n  };\n});\nconst useStyles = makeStyles(theme => ({\n  button: {\n    color: '#bbdefb',\n    backgroundColor: '#6495ED'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 1000,\n    backgroundColor: '#fff '\n  }\n})); // ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\n\nconst DonationCard = _ref2 => {\n  _s();\n\n  let {\n    isLoading\n  } = _ref2;\n  const classes = useStyles();\n  const Context = React.useContext(context);\n  const [amount, setAmount] = useState(\"\"); //cantidad a donar en ethers\n\n  const handleDonation = async e => {\n    try {\n      if (!window.ethereum) //Para ver si el usuario tiene cartera\n        throw new Error(\"No se encontro cartera de metamask.\");\n      await window.ethereum.send(\"eth_requestAccounts\");\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      console.log(\"enviando transaccion\");\n      const tx = await signer.sendTransaction({\n        to: constants.ADDRESS2,\n        value: ethers.utils.parseEther(amount),\n        gasPrice: signer.getGasPrice(),\n        gasLimit: 100000\n      });\n      console.log({\n        tx\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CardWrapper, {\n    border: false,\n    content: false,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 5\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        rowSpacing: 2,\n        direction: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"Cantidad en ethers para donar\",\n            variant: \"outlined\",\n            value: amount,\n            onChange: e => {\n              setAmount(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui blue button huge \",\n            onClick: handleDonation,\n            children: \"DONAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n/*\r\n                                <Grid container spacing = {2} >\r\n                <Grid item sx={{ mb: 0.75 }}>\r\n                    <Grid container alignItems=\"center\">\r\n                        <Grid item xs={4}>\r\n                            <Grid container alignItems=\"center\">\r\n                                <Grid item>\r\n                                    <TextField id=\"outlined-basic\" label=\"Cantidad en ethers para donar\" variant=\"outlined\" value = {amount} onChange = {(e) => {setAmount(e.target.value)}}/>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <button className =\"ui blue button huge \" onClick = {handleDonation}>DONAR</button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n\r\n\r\n<Grid item xs={8}>\r\n                            <Grid container alignItems=\"center\">\r\n                                <Grid item>\r\n                                    <p></p>\r\n                                    <Typography\r\n                                        margin = {5}\r\n                                        sx={{\r\n                                            fontSize: '2rem',\r\n                                            fontWeight: 500,\r\n                                            color: '#276fe6 '\r\n                                        }}\r\n                                        align='left'\r\n                                        >\r\n                                    Total Recaudado\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography\r\n                                        margin = {5}\r\n                                        sx={{ fontSize: '3rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75, color: '#4f87e4 ' }}\r\n                                        align='left'>\r\n                                    10 ether\r\n                                    </Typography>\r\n                                    <p></p>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    */\n\n\n_s(DonationCard, \"ljspZRT1jkRNNraWh0WluGyWtL4=\", false, function () {\n  return [useStyles];\n});\n\n_c = DonationCard;\nexport default DonationCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DonationCard\");","map":{"version":3,"sources":["/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/TFGInfo/DonationCard.js"],"names":["PropTypes","React","useState","useContext","MainCard","styled","Box","Grid","Typography","TextField","makeStyles","SendIcon","Paper","ethers","swal","Button","context","constants","CardWrapper","theme","backgroundColor","margin","overflow","position","zIndex","useStyles","button","color","paper","padding","spacing","maxWidth","DonationCard","isLoading","classes","Context","amount","setAmount","handleDonation","e","window","ethereum","Error","send","provider","providers","Web3Provider","signer","getSigner","console","log","tx","sendTransaction","to","ADDRESS2","value","utils","parseEther","gasPrice","getGasPrice","gasLimit","err","p","target"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { useState, useContext } from 'react';\r\nimport MainCard from './MainCard';\r\n// material-ui\r\nimport { styled } from '@mui/material/styles';\r\nimport {  Box, Grid, Typography, TextField } from '@mui/material';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport {  Paper} from '@material-ui/core';\r\nimport { ethers } from \"ethers\";\r\nimport swal from 'sweetalert';\r\nimport Button from 'semantic-ui-react';\r\nimport { context } from './../../contextProvider.js';\r\nimport * as constants from './../../constantFile.js';\r\n\r\n\r\n\r\nconst CardWrapper = styled(MainCard)(({ theme }) => ({\r\n    backgroundColor: '#FFF6DB ',\r\n    margin: '1rem',\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n    '&>div': {\r\n        position: 'relative',\r\n        zIndex: 5\r\n    },\r\n}));\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    button: {\r\n        color: '#bbdefb' ,\r\n        backgroundColor: '#6495ED'\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        margin: 'auto',\r\n        maxWidth: 1000,\r\n        backgroundColor: '#fff '\r\n    },\r\n  }));\r\n// ==============================|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||============================== //\r\n\r\nconst DonationCard = ({ isLoading }) => {\r\n\r\n    const classes = useStyles();\r\n    const Context = React.useContext(context);\r\n    const [amount, setAmount] = useState(\"\"); //cantidad a donar en ethers\r\n    \r\n    const handleDonation = async (e) => {\r\n        try{\r\n            if(!window.ethereum) //Para ver si el usuario tiene cartera\r\n                throw new Error(\"No se encontro cartera de metamask.\");\r\n            await window.ethereum.send(\"eth_requestAccounts\");\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            const signer = provider.getSigner();\r\n            console.log(\"enviando transaccion\")\r\n            const tx = await signer.sendTransaction({\r\n                to: constants.ADDRESS2,\r\n                value:  ethers.utils.parseEther(amount),\r\n                gasPrice: signer.getGasPrice(),\r\n                gasLimit : 100000\r\n            });\r\n            console.log({tx});\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n    <CardWrapper border={false} content={false}>\r\n        <Box sx={{ p: 5 }}>\r\n            <Grid container rowSpacing = {2} direction = \"column\">\r\n                <Grid item>\r\n                    <TextField id=\"outlined-basic\" label=\"Cantidad en ethers para donar\" variant=\"outlined\" value = {amount} onChange = {(e) => {setAmount(e.target.value)}}/>\r\n                </Grid>\r\n                <Grid item>\r\n                    <button className =\"ui blue button huge \" onClick = {handleDonation}>DONAR</button>   \r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    </CardWrapper>);\r\n};\r\n\r\n\r\n/*\r\n                                <Grid container spacing = {2} >\r\n                <Grid item sx={{ mb: 0.75 }}>\r\n                    <Grid container alignItems=\"center\">\r\n                        <Grid item xs={4}>\r\n                            <Grid container alignItems=\"center\">\r\n                                <Grid item>\r\n                                    <TextField id=\"outlined-basic\" label=\"Cantidad en ethers para donar\" variant=\"outlined\" value = {amount} onChange = {(e) => {setAmount(e.target.value)}}/>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <button className =\"ui blue button huge \" onClick = {handleDonation}>DONAR</button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n\r\n\r\n<Grid item xs={8}>\r\n                            <Grid container alignItems=\"center\">\r\n                                <Grid item>\r\n                                    <p></p>\r\n                                    <Typography\r\n                                        margin = {5}\r\n                                        sx={{\r\n                                            fontSize: '2rem',\r\n                                            fontWeight: 500,\r\n                                            color: '#276fe6 '\r\n                                        }}\r\n                                        align='left'\r\n                                        >\r\n                                    Total Recaudado\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography\r\n                                        margin = {5}\r\n                                        sx={{ fontSize: '3rem', fontWeight: 500, mr: 1, mt: 1.75, mb: 0.75, color: '#4f87e4 ' }}\r\n                                        align='left'>\r\n                                    10 ether\r\n                                    </Typography>\r\n                                    <p></p>\r\n                                </Grid>\r\n\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    */\r\n\r\n\r\nexport default DonationCard;\r\n"]},"metadata":{},"sourceType":"module"}