{"ast":null,"code":"var _jsxFileName = \"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Home/home.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport { Button, Card, Image } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport * as constants from './../../constantFile.js';\nimport complaintContract from './../../complaintContract.json';\nimport CompanyItem from './CompanyItem.js';\nimport telefonica from './telefonica.png';\nimport { Box, CardContent, CardHeader, Divider, Typography } from '@mui/material';\nimport CircularGraph from '../Graphics/CircularGraph.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [companies, setCompanies] = useState([]);\n  const [reputation, setReputation] = useState([]);\n  useEffect(() => {\n    //Para conectarse al smart contract\n    const infuraUrl = constants.INFURA_URL; //Crea una instancia para comunicarse con el nodo indicado\n\n    const web3 = new Web3(new Web3.providers.HttpProvider(infuraUrl)); //Se conectaria con el contrato\n\n    const contract = new web3.eth.Contract(complaintContract.abi, constants.CONTRACT_ADDRESS); //Obtenemos el array de empresas\n\n    contract.methods.getCompanies().call().then(response => setCompanies(response)); //Obtenemos sus reputaciones\n\n    contract.methods.getReputation().call().then(response => setReputation(response));\n  }, []); //Unimos reputaciones y empresas\n\n  let card = companies.map((e, i) => [e, reputation[i]]); //Creamos componentes (para las cartas)\n\n  let CompanyCards = card.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [item[0], \" \", item[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 46\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 41\n  }, this));\n  const data1 = [{\n    name: 'Mujeres',\n    value: 63,\n    color: '#3F51B5'\n  }, {\n    name: 'Hombres',\n    value: 15,\n    color: '#E53935'\n  }, {\n    name: 'No binario',\n    value: 23,\n    color: '#FB8C00'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Company List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              height: 300,\n              position: 'relative'\n            },\n            children: /*#__PURE__*/_jsxDEV(CircularGraph, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              pt: 2\n            },\n            children: data1.map(_ref => {\n              let {\n                color,\n                name,\n                value\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  p: 1,\n                  textAlign: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"textPrimary\",\n                  variant: \"body1\",\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  style: {\n                    color\n                  },\n                  variant: \"h4\",\n                  children: [value, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 17\n                }, this)]\n              }, name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 15\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          extra: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ui two buttons\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              basic: true,\n              color: \"green\",\n              children: \"Ver empresa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              basic: true,\n              color: \"red\",\n              children: \"Denunciar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Home, \"H0JO+DheZoDn5ZuiaNn5k2oHwpE=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Home/home.js"],"names":["useEffect","useState","Web3","Button","Card","Image","constants","complaintContract","CompanyItem","telefonica","Box","CardContent","CardHeader","Divider","Typography","CircularGraph","Home","companies","setCompanies","reputation","setReputation","infuraUrl","INFURA_URL","web3","providers","HttpProvider","contract","eth","Contract","abi","CONTRACT_ADDRESS","methods","getCompanies","call","then","response","getReputation","card","map","e","i","CompanyCards","item","data1","name","value","color","height","position","display","justifyContent","pt","p","textAlign"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,mBAApC;AACA,OAAO,kCAAP;AACA,OAAO,KAAKC,SAAZ,MAA2B,yBAA3B;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,GAAT,EAAcC,WAAd,EAA2BC,UAA3B,EAAuCC,OAAvC,EAAgDC,UAAhD,QAAkE,eAAlE;AACA,OAAOC,aAAP,MAA0B,8BAA1B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAChB;AACI,UAAMqB,SAAS,GAAGf,SAAS,CAACgB,UAA5B,CAFY,CAIZ;;AACA,UAAMC,IAAI,GAAG,IAAIrB,IAAJ,CAAS,IAAIA,IAAI,CAACsB,SAAL,CAAeC,YAAnB,CAAgCJ,SAAhC,CAAT,CAAb,CALY,CAOZ;;AACA,UAAMK,QAAQ,GAAG,IAAIH,IAAI,CAACI,GAAL,CAASC,QAAb,CAAsBrB,iBAAiB,CAACsB,GAAxC,EAA6CvB,SAAS,CAACwB,gBAAvD,CAAjB,CARY,CAUZ;;AACAJ,IAAAA,QAAQ,CAACK,OAAT,CAAiBC,YAAjB,GAAgCC,IAAhC,GAAuCC,IAAvC,CAA4CC,QAAQ,IAAIjB,YAAY,CAACiB,QAAD,CAApE,EAXY,CAaZ;;AACAT,IAAAA,QAAQ,CAACK,OAAT,CAAiBK,aAAjB,GAAiCH,IAAjC,GAAwCC,IAAxC,CAA6CC,QAAQ,IAAIf,aAAa,CAACe,QAAD,CAAtE;AAEH,GAhBQ,EAgBP,EAhBO,CAAT,CALe,CAuBf;;AACA,MAAIE,IAAI,GAAGpB,SAAS,CAACqB,GAAV,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAU,CAACD,CAAD,EAAIpB,UAAU,CAACqB,CAAD,CAAd,CAAxB,CAAX,CAxBe,CAyBf;;AACA,MAAIC,YAAY,GAAGJ,IAAI,CAACC,GAAL,CAASI,IAAI,iBAAI;AAAA,2BAAK;AAAA,iBAAKA,IAAI,CAAC,CAAD,CAAT,OAAeA,IAAI,CAAC,CAAD,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,UAAjB,CAAnB;AACA,QAAMC,KAAK,GAAG,CACV;AACEC,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,KAAK,EAAE,EAFT;AAGEC,IAAAA,KAAK,EAAE;AAHT,GADU,EAMV;AACEF,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,KAAK,EAAE,EAFT;AAGEC,IAAAA,KAAK,EAAE;AAHT,GANU,EAWV;AACEF,IAAAA,IAAI,EAAE,YADR;AAEEC,IAAAA,KAAK,EAAE,EAFT;AAGEC,IAAAA,KAAK,EAAE;AAHT,GAXU,CAAd;AAiBA,sBAAO;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAA,6BACK,QAAC,IAAD;AAAA,gCACG,QAAC,IAAD,CAAM,OAAN;AAAA,kCACA,QAAC,GAAD;AACJ,YAAA,EAAE,EAAE;AACFC,cAAAA,MAAM,EAAE,GADN;AAEFC,cAAAA,QAAQ,EAAE;AAFR,aADA;AAAA,mCAMJ,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AANI;AAAA;AAAA;AAAA;AAAA,kBADA,eASN,QAAC,GAAD;AACE,YAAA,EAAE,EAAE;AACFC,cAAAA,OAAO,EAAE,MADP;AAEFC,cAAAA,cAAc,EAAE,QAFd;AAGFC,cAAAA,EAAE,EAAE;AAHF,aADN;AAAA,sBAOGR,KAAK,CAACL,GAAN,CAAU;AAAA,kBAAC;AACVQ,gBAAAA,KADU;AAEVF,gBAAAA,IAFU;AAGVC,gBAAAA;AAHU,eAAD;AAAA,kCAKT,QAAC,GAAD;AAEE,gBAAA,EAAE,EAAE;AACFO,kBAAAA,CAAC,EAAE,CADD;AAEFC,kBAAAA,SAAS,EAAE;AAFT,iBAFN;AAAA,wCAOE,QAAC,UAAD;AACE,kBAAA,KAAK,EAAC,aADR;AAEE,kBAAA,OAAO,EAAC,OAFV;AAAA,4BAIGT;AAJH;AAAA;AAAA;AAAA;AAAA,wBAPF,eAaE,QAAC,UAAD;AACE,kBAAA,KAAK,EAAE;AAAEE,oBAAAA;AAAF,mBADT;AAEE,kBAAA,OAAO,EAAC,IAFV;AAAA,6BAIGD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA,wBAbF;AAAA,iBACOD,IADP;AAAA;AAAA;AAAA;AAAA,sBALS;AAAA,aAAV;AAPH;AAAA;AAAA;AAAA;AAAA,kBATM;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eA8CG,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,KAAK,MAAnB;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,oCACA,QAAC,MAAD;AAAQ,cAAA,KAAK,MAAb;AAAc,cAAA,KAAK,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAIA,QAAC,MAAD;AAAQ,cAAA,KAAK,MAAb;AAAc,cAAA,KAAK,EAAC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBA9CH;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AA+DH,CA3GD;;GAAM5B,I;;KAAAA,I;AA6GN,eAAeA,IAAf","sourcesContent":["import { useEffect, useState} from 'react';\nimport Web3 from 'web3';\nimport { Button, Card, Image } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport * as constants from './../../constantFile.js';\nimport complaintContract from './../../complaintContract.json';\nimport CompanyItem from './CompanyItem.js';\nimport telefonica from './telefonica.png';\nimport { Box, CardContent, CardHeader, Divider, Typography } from '@mui/material';\nimport CircularGraph from '../Graphics/CircularGraph.js';\n\nconst Home = () => {\n\n    const [companies, setCompanies] = useState([]);\n    const [reputation, setReputation] = useState([]);\n   \n    useEffect(() => {\n    //Para conectarse al smart contract\n        const infuraUrl = constants.INFURA_URL;\n\n        //Crea una instancia para comunicarse con el nodo indicado\n        const web3 = new Web3(new Web3.providers.HttpProvider(infuraUrl));\n\n        //Se conectaria con el contrato\n        const contract = new web3.eth.Contract(complaintContract.abi, constants.CONTRACT_ADDRESS);\n\n        //Obtenemos el array de empresas\n        contract.methods.getCompanies().call().then(response => setCompanies(response));\n        \n        //Obtenemos sus reputaciones\n        contract.methods.getReputation().call().then(response => setReputation(response));\n    \n    },[]);\n    \n    //Unimos reputaciones y empresas\n    let card = companies.map((e, i) => [e, reputation[i]]);\n    //Creamos componentes (para las cartas)\n    let CompanyCards = card.map(item => <div><h3>{item[0]} {item[1]}</h3></div>);\n    const data1 = [\n        {\n          name: 'Mujeres',\n          value: 63,\n          color: '#3F51B5'\n        },\n        {\n          name: 'Hombres',\n          value: 15,\n          color: '#E53935'\n        },\n        {\n          name: 'No binario',\n          value: 23,\n          color: '#FB8C00'\n        }\n      ];\n    return <div>\n        <h2>Company List</h2>\n        <div>\n             <Card>\n                <Card.Content>\n                <Box\n            sx={{\n              height: 300,\n              position: 'relative'\n            }}\n          >\n            <CircularGraph/>\n          </Box>\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'center',\n              pt: 2\n            }}\n          >\n            {data1.map(({\n              color,\n              name,\n              value\n            }) => (\n              <Box\n                key={name}\n                sx={{\n                  p: 1,\n                  textAlign: 'center'\n                }}\n              >\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"body1\"\n                >\n                  {name}\n                </Typography>\n                <Typography\n                  style={{ color }}\n                  variant=\"h4\"\n                >\n                  {value}\n                  %\n                </Typography>\n              </Box>\n            ))}\n          </Box>\n                </Card.Content>\n                <Card.Content extra>\n                    <div className='ui two buttons'>\n                    <Button basic color='green'>\n                        Ver empresa\n                    </Button>\n                    <Button basic color='red'>\n                        Denunciar\n                    </Button>\n                    </div>\n                </Card.Content>\n            </Card>\n        </div>\n    \n    </div>\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}