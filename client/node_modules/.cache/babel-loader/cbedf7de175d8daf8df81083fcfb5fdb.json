{"ast":null,"code":"var _jsxFileName = \"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Form/Formu.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport asyncValidate from './asyncValidate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validate = values => {\n  const errors = {};\n  const requiredFields = ['firstName', 'lastName', 'email', 'favoriteColor', 'notes'];\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required';\n    }\n  });\n\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nconst renderTextField = _ref => {\n  let {\n    label,\n    input,\n    meta: {\n      touched,\n      invalid,\n      error\n    },\n    ...custom\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    label: label,\n    placeholder: label,\n    error: touched && invalid,\n    helperText: touched && error,\n    ...input,\n    ...custom\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n\nconst renderCheckbox = _ref2 => {\n  let {\n    input,\n    label\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: input.value ? true : false,\n        onChange: input.onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this),\n      label: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n};\n\nconst radioButton = _ref3 => {\n  let {\n    input,\n    ...rest\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    children: /*#__PURE__*/_jsxDEV(RadioGroup, { ...input,\n      ...rest,\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: \"female\",\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 49\n        }, this),\n        label: \"Female\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: \"male\",\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 47\n        }, this),\n        label: \"Male\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: \"other\",\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 48\n        }, this),\n        label: \"Other\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n};\n\nconst renderFromHelper = _ref4 => {\n  let {\n    touched,\n    error\n  } = _ref4;\n\n  if (!(touched && error)) {\n    return;\n  } else {\n    return /*#__PURE__*/_jsxDEV(FormHelperText, {\n      children: touched && error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n};\n\nconst renderSelectField = _ref5 => {\n  let {\n    input,\n    label,\n    meta: {\n      touched,\n      error\n    },\n    children,\n    ...custom\n  } = _ref5;\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    error: touched && error,\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      htmlFor: \"age-native-simple\",\n      children: \"Age\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      native: true,\n      ...input,\n      ...custom,\n      inputProps: {\n        name: 'age',\n        id: 'age-native-simple'\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this), renderFromHelper({\n      touched,\n      error\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 3\n  }, this);\n};\n\nconst Formu = props => {\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting,\n    classes\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: \"firstName\",\n          component: renderTextField,\n          label: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: \"lastName\",\n          component: renderTextField,\n          label: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          component: renderTextField,\n          label: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: \"sex\",\n          component: radioButton,\n          children: [/*#__PURE__*/_jsxDEV(Radio, {\n            value: \"male\",\n            label: \"male\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Radio, {\n            value: \"female\",\n            label: \"female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          classes: classes,\n          name: \"favoriteColor\",\n          component: renderSelectField,\n          label: \"Favorite Color\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 'ff0000',\n            children: \"Red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: '00ff00',\n            children: \"Green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: '0000ff',\n            children: \"Blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: \"employed\",\n          component: renderCheckbox,\n          label: \"Employed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: \"notes\",\n          component: renderTextField,\n          label: \"Notes\",\n          multiline: true,\n          rowsMax: \"4\",\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: pristine || submitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: pristine || submitting,\n          onClick: reset,\n          children: \"Clear Values\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Formu;\nexport default reduxForm({\n  form: 'Formu',\n  // a unique identifier for this form\n  validate,\n  asyncValidate\n})(Formu);\n\nvar _c;\n\n$RefreshReg$(_c, \"Formu\");","map":{"version":3,"sources":["/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Form/Formu.js"],"names":["React","Field","reduxForm","TextField","Checkbox","FormControlLabel","FormControl","Select","InputLabel","FormHelperText","Radio","RadioGroup","asyncValidate","validate","values","errors","requiredFields","forEach","field","email","test","renderTextField","label","input","meta","touched","invalid","error","custom","renderCheckbox","value","onChange","radioButton","rest","renderFromHelper","renderSelectField","children","name","id","Formu","props","handleSubmit","pristine","reset","submitting","classes","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport TextField from '@material-ui/core/TextField'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport asyncValidate from './asyncValidate'\n\nconst validate = values => {\n  const errors = {}\n  const requiredFields = [\n    'firstName',\n    'lastName',\n    'email',\n    'favoriteColor',\n    'notes'\n  ]\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required'\n    }\n  })\n  if (\n    values.email &&\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n  ) {\n    errors.email = 'Invalid email address'\n  }\n  return errors\n}\n\nconst renderTextField = ({\n  label,\n  input,\n  meta: { touched, invalid, error },\n  ...custom\n}) => (\n  <TextField\n    label={label}\n    placeholder={label}\n    error={touched && invalid}\n    helperText={touched && error}\n    {...input}\n    {...custom}\n  />\n)\n\nconst renderCheckbox = ({ input, label }) => (\n  <div>\n    <FormControlLabel\n      control={\n        <Checkbox\n          checked={input.value ? true : false}\n          onChange={input.onChange}\n        />\n      }\n      label={label}\n    />\n  </div>\n)\n\nconst radioButton = ({ input, ...rest }) => (\n  <FormControl>\n    <RadioGroup {...input} {...rest}>\n      <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n      <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n      <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n    </RadioGroup>\n  </FormControl>\n)\n\nconst renderFromHelper = ({ touched, error }) => {\n  if (!(touched && error)) {\n    return\n  } else {\n    return <FormHelperText>{touched && error}</FormHelperText>\n  }\n}\n\nconst renderSelectField = ({\n  input,\n  label,\n  meta: { touched, error },\n  children,\n  ...custom\n}) => (\n  <FormControl error={touched && error}>\n    <InputLabel htmlFor=\"age-native-simple\">Age</InputLabel>\n    <Select\n      native\n      {...input}\n      {...custom}\n      inputProps={{\n        name: 'age',\n        id: 'age-native-simple'\n      }}\n    >\n      {children}\n    </Select>\n    {renderFromHelper({ touched, error })}\n  </FormControl>\n)\n\nconst Formu = props => {\n  const { handleSubmit, pristine, reset, submitting, classes } = props\n  return (\n    <div>\n    <form onSubmit={handleSubmit}>\n      <div>\n        <Field\n          name=\"firstName\"\n          component={renderTextField}\n          label=\"First Name\"\n        />\n      </div>\n      <div>\n        <Field name=\"lastName\" component={renderTextField} label=\"Last Name\" />\n      </div>\n      <div>\n        <Field name=\"email\" component={renderTextField} label=\"Email\" />\n      </div>\n      <div>\n        <Field name=\"sex\" component={radioButton}>\n          <Radio value=\"male\" label=\"male\" />\n          <Radio value=\"female\" label=\"female\" />\n        </Field>\n      </div>\n      <div>\n        <Field\n          classes={classes}\n          name=\"favoriteColor\"\n          component={renderSelectField}\n          label=\"Favorite Color\"\n        >\n          <option value=\"\" />\n          <option value={'ff0000'}>Red</option>\n          <option value={'00ff00'}>Green</option>\n          <option value={'0000ff'}>Blue</option>\n        </Field>\n      </div>\n      <div>\n        <Field name=\"employed\" component={renderCheckbox} label=\"Employed\" />\n      </div>\n      <div />\n      <div>\n        <Field\n          name=\"notes\"\n          component={renderTextField}\n          label=\"Notes\"\n          multiline\n          rowsMax=\"4\"\n          margin=\"normal\"\n        />\n      </div>\n      <div>\n        <button type=\"submit\" disabled={pristine || submitting}>\n          Submit\n        </button>\n\n<button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </div>\n    </form>\n    </div>\n\n  )\n}\n\nexport default reduxForm({\n  form: 'Formu', // a unique identifier for this form\n  validate,\n  asyncValidate\n})(Formu)"]},"metadata":{},"sourceType":"module"}