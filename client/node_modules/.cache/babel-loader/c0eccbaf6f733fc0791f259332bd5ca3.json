{"ast":null,"code":"var _jsxFileName = \"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Home/home.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport { Button, Card, Image } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport * as constants from './../../constantFile.js';\nimport complaintContract from './../../complaintContract.json';\nimport CompanyItem from './CompanyItem.js';\nimport telefonica from './telefonica.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [companies, setCompanies] = useState([]);\n  const [reputation, setReputation] = useState([]);\n  useEffect(() => {\n    //Para conectarse al smart contract\n    const infuraUrl = constants.INFURA_URL; //Crea una instancia para comunicarse con el nodo indicado\n\n    const web3 = new Web3(new Web3.providers.HttpProvider(infuraUrl)); //Se conectaria con el contrato\n\n    const contract = new web3.eth.Contract(complaintContract.abi, constants.CONTRACT_ADDRESS); //Obtenemos el array de empresas\n\n    contract.methods.getCompanies().call().then(response => setCompanies(response)); //Obtenemos sus reputaciones\n\n    contract.methods.getReputation().call().then(response => setReputation(response));\n  }, []); //Unimos reputaciones y empresas\n\n  let card = companies.map((e, i) => [e, reputation[i]]); //Creamos componentes (para las cartas)\n\n  let CompanyCards = card.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [item[0], \" \", item[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 46\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 41\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Company List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            floated: \"right\",\n            size: \"medium\",\n            src: telefonica\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Header, {\n            children: companies[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n            children: reputation[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n            children: [\"Telef\\xF3nica es una \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"buena empresa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          extra: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ui two buttons\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              basic: true,\n              color: \"green\",\n              children: \"Ver empresa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              basic: true,\n              color: \"red\",\n              children: \"Denunciar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Home, \"H0JO+DheZoDn5ZuiaNn5k2oHwpE=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/Home/home.js"],"names":["useEffect","useState","Web3","Button","Card","Image","constants","complaintContract","CompanyItem","telefonica","Home","companies","setCompanies","reputation","setReputation","infuraUrl","INFURA_URL","web3","providers","HttpProvider","contract","eth","Contract","abi","CONTRACT_ADDRESS","methods","getCompanies","call","then","response","getReputation","card","map","e","i","CompanyCards","item"],"mappings":"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","sourcesContent":["import { useEffect, useState} from 'react';\nimport Web3 from 'web3';\nimport { Button, Card, Image } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport * as constants from './../../constantFile.js';\nimport complaintContract from './../../complaintContract.json';\nimport CompanyItem from './CompanyItem.js';\nimport telefonica from './telefonica.png';\n\n\nconst Home = () => {\n\n    const [companies, setCompanies] = useState([]);\n    const [reputation, setReputation] = useState([]);\n   \n    useEffect(() => {\n    //Para conectarse al smart contract\n        const infuraUrl = constants.INFURA_URL;\n\n        //Crea una instancia para comunicarse con el nodo indicado\n        const web3 = new Web3(new Web3.providers.HttpProvider(infuraUrl));\n\n        //Se conectaria con el contrato\n        const contract = new web3.eth.Contract(complaintContract.abi, constants.CONTRACT_ADDRESS);\n\n        //Obtenemos el array de empresas\n        contract.methods.getCompanies().call().then(response => setCompanies(response));\n        \n        //Obtenemos sus reputaciones\n        contract.methods.getReputation().call().then(response => setReputation(response));\n    \n    },[]);\n    \n    //Unimos reputaciones y empresas\n    let card = companies.map((e, i) => [e, reputation[i]]);\n    //Creamos componentes (para las cartas)\n    let CompanyCards = card.map(item => <div><h3>{item[0]} {item[1]}</h3></div>);\n    \n    return <div>\n        <h2>Company List</h2>\n        <div>\n             <Card>\n                <Card.Content>\n                    <Image\n                    floated='right'\n                    size='medium'\n                    src={telefonica}/>\n                    <Card.Header>{companies[0]}</Card.Header>\n                    <Card.Meta>{reputation[0]}</Card.Meta>\n                    <Card.Description>\n                        Telefónica es una <strong>buena empresa</strong>\n                    </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                    <div className='ui two buttons'>\n                    <Button basic color='green'>\n                        Ver empresa\n                    </Button>\n                    <Button basic color='red'>\n                        Denunciar\n                    </Button>\n                    </div>\n                </Card.Content>\n            </Card>\n        </div>\n    \n    </div>\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}