{"ast":null,"code":"var _jsxFileName = \"/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/User/user.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport linkedin_logo from '../../Images/linkedin_logo.png';\nimport styles from './user.module.css';\nimport { context } from '../../contextProvider.js';\nimport Web3 from 'web3';\nimport * as constants from './../../constantFile.js';\nimport complaintContract from './../../complaintContract.json';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst User = () => {\n  _s();\n\n  //Variable y setter para mostrar u ocultar el formulario\n  const [showForm, setShowForm] = useState(false); //Variable que va a contener las empresas que apareceran como opcion en el formulario\n\n  const [companies, setCompanies] = useState([]); //Datos del formulario\n\n  const [input, setInput] = useState('');\n  const [company, setCompany] = useState(''); //Cantidad a donar (en caso de que donen)\n\n  const [donationQuantity, setDonationQuantity] = useState(0); //Se obtiene el usuario (se comprueba si hay un usuario logeado o no)\n\n  const user = React.useContext(context); //Delegamos al servidor la autenticacion\n\n  const verifyLinkedIn = () => {\n    window.location.href = `${constants.SERVER_URL}/auth/linkedin`;\n  }; //Delegamos al servidor el cierre de sesion\n\n\n  const logOut = () => {\n    window.location.href = `${constants.SERVER_URL}/logout`;\n  }; //Desplegar el formulario\n\n\n  const showFormF = () => {\n    setShowForm(!showForm);\n  }; //Se guarda la empresa escogida\n\n\n  const handleCompany = e => {\n    setCompany(e.target.value);\n  }; //Se guardan los datos escritos en el formulario de denuncia\n\n\n  const handleInput = e => {\n    setInput(e.target.value);\n  }; //Se guarda el valor escrito en el formulario de donación\n\n\n  const handleDonation = e => {\n    setDonationQuantity(e.target.value);\n  }; //Función para realizar la transaccion al recibir los parametros\n\n\n  async function newComplaint(web3, address, transaction) {\n    try {\n      const tx = {\n        to: transaction._parent._address,\n        //Dirección del contrato\n        data: transaction.encodeABI(),\n        //\n        gas: await transaction.estimateGas({\n          from: address\n        }),\n        //Se estima el coste en gas\n        gasPrice: await web3.eth.getGasPrice(),\n        //Precio del gas\n        gaslimit: 0x1000000,\n        //Limite de gas que se puede gastar\n        value: 0 //No se va a realizar una transferencia\n\n      }; //Se firma la transacción con la clave privada\n\n      const signedTx = await web3.eth.accounts.signTransaction(tx, constants.PRIVATE_KEY); //Se envia la transaccion firmada \n\n      web3.eth.sendSignedTransaction(signedTx.rawTransaction);\n    } catch (err) {\n      console.log(err.message);\n    }\n  } //Para comprobar si tienen proveedor (Metamask) de forma que puedan donar\n\n\n  const hasProvider = !!Web3.givenProvider; //Obtenemos las empresas del smart contract, conectandonos al nodo de Infura\n\n  useEffect(() => {\n    const infuraUrl = constants.INFURA_URL; //Crea una instancia para comunicarse con el nodo indicado\n\n    const web3 = new Web3(new Web3.providers.HttpProvider(infuraUrl)); //Se conectaria con el contrato\n\n    const contract = new web3.eth.Contract(complaintContract.abi, constants.CONTRACT_ADDRESS); //Obtenemos el array de empresas\n\n    contract.methods.getCompanies().call().then(response => setCompanies(response));\n  }, []); //Función que trata el submit en el formulario de denuncias\n\n  const handleSubmit = async e => {\n    e.preventDefault(); //Si todavia no se ha conectado con Metamask entonces aparece un popup para la conexion\n\n    const infuraUrl = constants.INFURA_URL; //Crea una instancia para comunicarse con el nodo indicado\n\n    const web3 = new Web3(new Web3.providers.HttpProvider(infuraUrl)); //Nos conectamos con el contrato\n\n    const contract = new web3.eth.Contract(complaintContract.abi, constants.CONTRACT_ADDRESS); //Realizamos la denuncia\n\n    newComplaint(web3, constants.ADDRESS, contract.methods.newComplaint(company, user, input));\n    setInput('');\n  }; //Función que trata el submit en el caso de donaciones\n\n\n  const handleSubmitDonation = async e => {\n    e.preventDefault(); //Si todavia no se ha conectado con Metamask entonces aparece un popup para la conexion\n\n    const web3 = new Web3(window.web3.currentProvider);\n    const accounts = await window.ethereum.enable(); //No hace falta que firmemos la transacción ya que Metamask lo hace por nosotros\n\n    web3.eth.sendTransaction({\n      to: constants.ADDRESS,\n      from: accounts[0],\n      value: web3.utils.toWei(donationQuantity, 'ether') //Se transfiere la cantidad introducida en el formulario\n\n    }, err => {\n      if (err) console.log(err.message);\n    });\n    setDonationQuantity(0);\n  };\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      backgroundColor: theme.palette.primary.main\n    }\n  }));\n  const theme = useStyles();\n\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loginGeneral,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.loginBox,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.loginButton,\n            onClick: verifyLinkedIn,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: linkedin_logo,\n              alt: \"Linkedin Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Verify your identity with LinkedIn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.reminderText,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Please note that that logging in is necessary for \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"identification\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 78\n              }, this), \" purposes:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: styles.infoList,\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Your personal information will \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"not\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 62\n                }, this), \" be published or stored.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Sensitive data will \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"not\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 51\n                }, this), \" be accessed.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Your report will be \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"anonymous\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 51\n                }, this), \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"A randomized name will be assigned to you in order to show the report.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.userPanel,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this), showForm && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: styles.reportForm,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Report Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"In which company did the incident take place?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleCompany,\n          children: companies.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item,\n            children: item\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 45\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Please, explain briefly what happened.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"textarea\",\n          name: \"explanation\",\n          value: input,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonPanel,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: showFormF,\n          className: styles.panelButton,\n          children: \"Show/Hide Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logOut,\n          className: styles.panelButton,\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this), hasProvider && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Please, feel free to suport this platform by donating.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmitDonation,\n          className: styles.reportForm,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"textarea\",\n            name: \"donationInput\",\n            value: donationQuantity,\n            onChange: handleDonation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Donate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 16\n    }, this);\n  }\n};\n\n_s(User, \"IqG0T+3Rf3Ym2bkU4WgQqdWpENI=\", true);\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/Angelota/Library/Mobile Documents/com~apple~CloudDocs/Desktop/UCM/TFG INFOR/github/aux/TFG-Plataforma-blockchain-para-visualizar-la-reputacion-de-empresas-sobre-casos-de-discriminacion/client/src/Components/User/user.js"],"names":["React","useEffect","useState","linkedin_logo","styles","context","Web3","constants","complaintContract","makeStyles","User","showForm","setShowForm","companies","setCompanies","input","setInput","company","setCompany","donationQuantity","setDonationQuantity","user","useContext","verifyLinkedIn","window","location","href","SERVER_URL","logOut","showFormF","handleCompany","e","target","value","handleInput","handleDonation","newComplaint","web3","address","transaction","tx","to","_parent","_address","data","encodeABI","gas","estimateGas","from","gasPrice","eth","getGasPrice","gaslimit","signedTx","accounts","signTransaction","PRIVATE_KEY","sendSignedTransaction","rawTransaction","err","console","log","message","hasProvider","givenProvider","infuraUrl","INFURA_URL","providers","HttpProvider","contract","Contract","abi","CONTRACT_ADDRESS","methods","getCompanies","call","then","response","handleSubmit","preventDefault","ADDRESS","handleSubmitDonation","currentProvider","ethereum","enable","sendTransaction","utils","toWei","useStyles","theme","root","backgroundColor","palette","primary","main","container","loginGeneral","loginBox","loginButton","reminderText","infoList","userPanel","reportForm","map","item","buttonPanel","panelButton"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport linkedin_logo from '../../Images/linkedin_logo.png';\nimport styles from './user.module.css';\nimport {context} from '../../contextProvider.js';\nimport Web3 from 'web3';\nimport * as constants from './../../constantFile.js';\nimport complaintContract from './../../complaintContract.json';\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst User = () => {\n    //Variable y setter para mostrar u ocultar el formulario\n    const [showForm, setShowForm] = useState(false);\n\n    //Variable que va a contener las empresas que apareceran como opcion en el formulario\n    const [companies, setCompanies] = useState([]);\n\n    //Datos del formulario\n    const [input, setInput] = useState('');\n    const [company, setCompany] = useState('');\n\n    //Cantidad a donar (en caso de que donen)\n    const [donationQuantity, setDonationQuantity] = useState(0);\n\n    //Se obtiene el usuario (se comprueba si hay un usuario logeado o no)\n    const user = React.useContext(context);\n    \n    //Delegamos al servidor la autenticacion\n    const verifyLinkedIn = () => { window.location.href = `${constants.SERVER_URL}/auth/linkedin`};\n\n    //Delegamos al servidor el cierre de sesion\n    const logOut = () => { window.location.href = `${constants.SERVER_URL}/logout`};\n   \n    //Desplegar el formulario\n    const showFormF = () => { setShowForm(!showForm); };\n\n    //Se guarda la empresa escogida\n    const handleCompany = (e) => { setCompany(e.target.value); }\n\n    //Se guardan los datos escritos en el formulario de denuncia\n    const handleInput = (e) => { \n         setInput(e.target.value); \n    };\n\n    //Se guarda el valor escrito en el formulario de donación\n    const handleDonation = (e) => {\n        setDonationQuantity(e.target.value);\n    }\n\n    //Función para realizar la transaccion al recibir los parametros\n    async function newComplaint(web3, address, transaction) {\n            try {\n                const tx = {\n                    to      : transaction._parent._address, //Dirección del contrato\n                    data    : transaction.encodeABI(),      //\n                    gas     : await transaction.estimateGas({from: address}),   //Se estima el coste en gas\n                    gasPrice: await web3.eth.getGasPrice(),   //Precio del gas\n                    gaslimit: 0x1000000,   //Limite de gas que se puede gastar\n                    value   : 0,   //No se va a realizar una transferencia\n                };\n                //Se firma la transacción con la clave privada\n                const signedTx  = await web3.eth.accounts.signTransaction(tx, constants.PRIVATE_KEY);\n                //Se envia la transaccion firmada \n                web3.eth.sendSignedTransaction(signedTx.rawTransaction);\n            }\n            catch (err) {\n                console.log(err.message);\n            }\n    }\n\n    //Para comprobar si tienen proveedor (Metamask) de forma que puedan donar\n    const hasProvider = !! Web3.givenProvider;\n\n    //Obtenemos las empresas del smart contract, conectandonos al nodo de Infura\n    useEffect(() => {\n        const infuraUrl = constants.INFURA_URL;\n        //Crea una instancia para comunicarse con el nodo indicado\n        const web3 = new Web3(new Web3.providers.HttpProvider(infuraUrl));\n        //Se conectaria con el contrato\n        const contract = new web3.eth.Contract(complaintContract.abi, constants.CONTRACT_ADDRESS);\n        //Obtenemos el array de empresas\n        contract.methods.getCompanies().call().then(response => setCompanies(response));\n    },[]);\n\n    //Función que trata el submit en el formulario de denuncias\n    const handleSubmit = async(e) => { \n        e.preventDefault();\n        //Si todavia no se ha conectado con Metamask entonces aparece un popup para la conexion\n        const infuraUrl = constants.INFURA_URL;\n        //Crea una instancia para comunicarse con el nodo indicado\n        const web3 = new Web3(new Web3.providers.HttpProvider(infuraUrl));\n        //Nos conectamos con el contrato\n        const contract = new web3.eth.Contract(complaintContract.abi, constants.CONTRACT_ADDRESS);\n        //Realizamos la denuncia\n        newComplaint(web3, constants.ADDRESS, contract.methods.newComplaint(company,user,input));\n        setInput('');\n    };\n\n    //Función que trata el submit en el caso de donaciones\n    const handleSubmitDonation = async(e) => {\n        e.preventDefault();\n        //Si todavia no se ha conectado con Metamask entonces aparece un popup para la conexion\n        const web3 = new Web3(window.web3.currentProvider);\n        const accounts = await window.ethereum.enable();\n        \n        //No hace falta que firmemos la transacción ya que Metamask lo hace por nosotros\n        web3.eth.sendTransaction(\n            {\n                to: constants.ADDRESS,\n                from: accounts[0],\n                value: web3.utils.toWei(donationQuantity, 'ether'), //Se transfiere la cantidad introducida en el formulario\n            },(err) => {\n                if (err) console.log(err.message);\n            })\n    \n        setDonationQuantity(0);\n    }\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          backgroundColor: theme.palette.primary.main\n        }\n    }));\n\n    const theme = useStyles();\n      \n    if(!user){\n        return <div className={styles.container} >\n            <div className={styles.loginGeneral}>\n                <div className={styles.loginBox}>\n                    <h1>Login</h1>\n                    <div className={styles.loginButton} onClick={verifyLinkedIn}>\n                        <img src={linkedin_logo} alt=\"Linkedin Logo\"/>\n                        <p>Verify your identity with LinkedIn</p>\n                    </div>\n                    <div className={styles.reminderText}>\n                        <p>Please note that that logging in is necessary for <strong>identification</strong> purposes:</p>\n                        <ul className={styles.infoList}>\n                          <li>Your personal information will <strong>not</strong> be published or stored.</li>\n                          <li>Sensitive data will <strong>not</strong> be accessed.</li>\n                          <li>Your report will be <strong>anonymous</strong>.</li>\n                          <li>A randomized name will be assigned to you in order to show the report.</li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    }\n    else{\n        return <div className={styles.userPanel}>\n            <h1>User Panel</h1>\n            {showForm && (\n                <form onSubmit={handleSubmit} className={styles.reportForm}>\n                  <label>Report Form</label>\n                  <label>In which company did the incident take place?</label>\n                  <select onChange={handleCompany}>\n                     {companies.map(item => <option value={item} key={item}>{item}</option>)}\n                  </select>\n                  <label>Please, explain briefly what happened.</label>\n                  <input type=\"textarea\" name=\"explanation\" value={input} onChange={handleInput} />\n                  <button>Submit</button>\n                </form>\n            )}\n            \n            <div className={styles.buttonPanel}>\n                <button onClick={showFormF} className={styles.panelButton}>Show/Hide Report</button>\n                <button onClick={logOut} className={styles.panelButton}>Log Out</button>\n            </div>\n\n            {hasProvider && (<div>\n              <h3>Please, feel free to suport this platform by donating.</h3>\n              <form onSubmit={handleSubmitDonation} className={styles.reportForm}>\n                <input type=\"textarea\" name=\"donationInput\" value={donationQuantity} onChange={handleDonation} />\n                <button>Donate</button> \n             </form>\n            </div>)}\n\n        </div>\n    }\n    \n}\n\nexport default User\n"]},"metadata":{},"sourceType":"module"}